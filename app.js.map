{"version":3,"sources":["webpack:///app.js","webpack:///webpack/bootstrap 439735e939b2075ae32b","webpack:///./main.js","webpack:///../~/crossfilter/index.js","webpack:///../~/crossfilter/crossfilter.js","webpack:///../~/d3/d3.js","webpack:///../~/lodash/lodash.js","webpack:///../~/webpack/buildin/module.js","webpack:///./script.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_crossfilter","_d","_lodash","_lodash2","_script","console","log","testdrive","forEach","item","activate","crossfilter","crossfilter_identity","d","permute","array","index","i","n","length","copy","Array","bisect_by","f","bisectLeft","a","x","lo","hi","mid","bisectRight","right","left","heap_by","heap","sift","sort","t","child","heapselect_by","heapselect","k","min","queue","Math","insertionsort_by","insertionsort","j","quicksort_by","quicksort_sizeThreshold","quicksort","sixth","i1","i5","i3","i2","i4","e1","x1","e2","x2","e3","x3","e4","x4","e5","x5","pivot1","pivotValue1","pivot2","pivotValue2","less","great","pivotsEqual","ek","xk","greatValue","lessValue","crossfilter_arrayUntyped","crossfilter_arrayLengthenUntyped","crossfilter_arrayWidenUntyped","width","Error","crossfilter_filterExact","bisect","value","values","crossfilter_filterRange","range","max","crossfilter_filterAll","crossfilter_null","crossfilter_zero","crossfilter_reduceIncrement","crossfilter_reduceDecrement","crossfilter_reduceAdd","v","crossfilter_reduceSubtract","add","newData","n0","n1","data","concat","filters","crossfilter_arrayLengthen","dataListeners","l","removeData","newIndex","crossfilter_index","removed","push","filterListeners","removeDataListeners","dimension","preAdd","newValues","map","crossfilter_range","bounds","refilter","lo1","hi1","refilterFunction","one","lo0","hi0","oldValues","oldIndex","i0","postAdd","indexListeners","reIndex","filterIndexBounds","filterIndexFunction","added","filter","filterAll","isArray","filterRange","filterFunction","filterExact","zero","top","bottom","group","key","groupIncrement","groupCapacity","crossfilter_arrayWiden","groupWidth","groupIndex","crossfilter_capacity","g0","x0","g","oldGroups","groups","reduceAdd","initial","reduceInitial","k0","resetNeeded","indexOf","update","updateMany","reset","resetMany","groupAll","updateOne","resetOne","oldK","seenGroups","filterOne","reduceRemove","all","select","reduce","remove","reduceCount","reduceSum","order","valueOf","orderNatural","size","dispose","splice","dimensionGroups","arguments","unshift","M","reduceValue","crossfilter_array8","crossfilter_array16","crossfilter_array32","w","version","by","Uint8Array","Uint16Array","Uint32Array","constructor","set","this","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","b","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","d3_transposeLength","d3_range_integerScale","d3_class","ctor","properties","Object","defineProperty","prototype","enumerable","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","z","listeners","on","listenerByName","listener","get","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e0","type","d3_selection","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","j0","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","margin","padding","border","ctm","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","toString","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","ceil","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","y1","ax","ay","bx","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisector","shuffle","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","silhouette","wiggle","s3","o0","expand","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined","global","addMapEntry","pair","addSetEntry","func","thisArg","arrayAggregator","iteratee","accumulator","arrayConcat","othIndex","othLength","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","arrayMap","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","baseExtremum","computed","baseFind","collection","eachFunc","retKey","baseFindIndex","fromRight","fromIndex","indexOfNaN","baseReduce","baseSortBy","comparer","baseSum","baseTimes","baseToPairs","props","baseUnary","baseValues","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","checkGlobal","compareAscending","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","compareMultiple","objCriteria","criteria","othCriteria","ordersLength","countHolders","placeholder","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","isHostObject","isIndex","reIsUint","MAX_SAFE_INTEGER","iteratorToArray","iterator","done","mapToArray","replaceHolders","PLACEHOLDER","setToArray","stringSize","reHasComplexSymbol","reComplexSymbol","stringToArray","unescapeHtmlChar","htmlUnescapes","runInContext","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","getView","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","hashDelete","hash","hashHas","hashGet","nativeCreate","HASH_UNDEFINED","hashSet","MapCache","mapClear","Map","mapDelete","isKeyable","assocDelete","mapGet","assocGet","mapHas","assocHas","mapSet","assocSet","SetCache","cacheHas","cache","cachePush","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","assocIndexOf","eq","assignInDefaults","objValue","srcValue","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","copyObject","baseAt","isNil","baseCastArrayLikeObject","isArrayLikeObject","baseCastFunction","baseCastPath","stringToPath","baseClamp","baseClone","isDeep","customizer","isObject","initCloneArray","tag","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbols","cloneableTags","initCloneByTag","stacked","baseForOwn","subValue","baseConforms","baseCreate","proto","objectCreate","baseDelay","wait","TypeError","FUNC_ERROR_TEXT","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseFill","toInteger","toLength","baseFilter","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","isKey","baseHas","getPrototypeOf","baseHasIn","baseInRange","nativeMax","baseIntersection","caches","seen","baseInverter","baseInvoke","last","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","isPartial","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","equalArrays","equalObjects","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","nativeKeys","baseKeysIn","baseMap","isArrayLike","getMatchData","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isPlainObject","toPlainObject","baseOrderBy","toIteratee","getIteratee","basePick","basePickBy","baseProperty","basePropertyDeep","basePullAll","basePullAllBy","basePullAt","baseRandom","nativeFloor","nativeRandom","baseRange","nativeCeil","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","baseSortedIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseSortedUniqBy","baseUniq","createSet","seenIndex","baseUnset","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","Ctor","cloneArrayBuffer","arrayBuffer","byteLength","cloneMap","cloneRegExp","regexp","reFlags","cloneSet","cloneSymbol","Symbol","symbolValueOf","cloneTypedArray","typedArray","byteOffset","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","copyObjectWith","getSymbols","createAggregator","initializer","createAssigner","assigner","rest","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","keysFunc","createBaseWrapper","wrapper","fn","isBind","BIND_FLAG","createCtorWrapper","createCaseFirst","methodName","trailing","createCompounder","words","deburr","thisBinding","createCurryWrapper","arity","getPlaceholder","createRecurryWrapper","createHybridWrapper","createFlow","funcs","prereq","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","createOver","arrayFunc","createPadding","chars","strLength","padLength","repeat","createPartialWrapper","toNumber","wrapFunc","isCurry","newArgPos","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","setData","createRound","createWrapper","mergeData","baseSetData","isUnordered","arrValue","othValue","compared","arrayBufferTag","boolTag","dateTag","errorTag","message","numberTag","regexpTag","stringTag","mapTag","convert","setTag","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","realNames","otherFunc","toPairs","isStrictComparable","getNative","isNative","objectToString","transforms","hasPath","hasFunc","isLength","isString","isPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","indexKeys","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","oldArray","rePropName","quote","reEscapeChar","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","findIndex","findLastIndex","flatten","flattenDeep","INFINITY","flattenDepth","fromPairs","head","separator","nativeJoin","pullAll","pullAllBy","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperFlatMap","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","findLast","baseEachRight","flatMap","forEachRight","orderBy","reduceRight","reject","sample","sampleSize","rand","some","curry","curryRight","debounce","options","timeoutId","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","delayed","stamp","maxDelayed","debounced","leading","maxWait","leadingCall","flip","memoize","resolver","memoized","Cache","negate","once","otherArgs","spread","throttle","unary","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","gt","gte","propertyIsEnumerable","isArrayBuffer","getLength","isBoolean","isDate","isElement","isEmpty","isEqual","isEqualWith","isError","nativeIsFinite","isInteger","isMap","isMatch","isMatchWith","isNumber","reIsNative","funcToString","reIsHostCtor","isNull","objectCtorString","isRegExp","isSafeInteger","isSet","isSymbol","typedArrayTags","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","lt","lte","iteratorSymbol","MAX_INTEGER","remainder","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","NAN","toSafeInteger","symbolToString","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","defaultValue","isProto","skipIndexes","propsLength","mapKeys","mapValues","omitBy","pickBy","setWith","toPairsIn","unset","valuesIn","inRange","floating","temp","freeParseFloat","capitalize","upperFirst","reLatin1","reComboMark","endsWith","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChar","reRegExpChar","padEnd","padStart","radix","nativeParseInt","reHasHexPrefix","limit","startsWith","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","reNoMatch","reDelimiters","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","toLower","toUpper","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","search","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reHasComplexWord","reComplexWord","reBasicWord","cond","conforms","constant","matchesProperty","mixin","methodNames","noConflict","oldDash","noop","nthArg","propertyOf","toPath","uniqueId","idCounter","augend","addend","maxBy","minBy","subtract","minuend","subtrahend","sumBy","defaults","pick","contextProps","arrayProto","Buffer","moduleExports","Reflect","enumerate","getOwnPropertySymbols","Set","WeakMap","metaMap","mapCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","ctorString","HOT_SPAN","HOT_COUNT","difference","differenceBy","differenceWith","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zipWith","wrapperAt","countBy","groupBy","invokeMap","isProp","keyBy","sortBy","bindKey","defer","overArgs","funcsLength","partialRight","rearg","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invertBy","invoke","omit","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","methodOf","over","overEvery","overSome","rangeRight","extend","extendWith","eachRight","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsQuoteRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","freeWindow","thisGlobal","webpackPolyfill","deprecate","_d2","dataUrl","responseHandler","doCrossfilter","dataset","observations","_crossfilter2","byBike","Bici","byBikeGroup","Edad_Usuario","Genero_Usuario","byGender","byGenderGroup","byAge","tf","byAgeGroup","setupUI"],"mappings":"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","file":"app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _crossfilter = __webpack_require__(1);\n\t\n\tvar _crossfilter2 = _interopRequireDefault(_crossfilter);\n\t\n\tvar _d = __webpack_require__(3);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tvar _lodash = __webpack_require__(4);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _script = __webpack_require__(6);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t{\n\t    console.log(\"TestDrive up and running!\");\n\t    (0, _script.testdrive)();\n\t\n\t    _lodash2.default.forEach([0, 2, 4, 6, 8], function (item) {\n\t        console.log(item);\n\t    });\n\t\n\t    (0, _script.activate)();\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(2).crossfilter;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t(function(exports){\n\tcrossfilter.version = \"1.3.12\";\n\tfunction crossfilter_identity(d) {\n\t  return d;\n\t}\n\tcrossfilter.permute = permute;\n\t\n\tfunction permute(array, index) {\n\t  for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {\n\t    copy[i] = array[index[i]];\n\t  }\n\t  return copy;\n\t}\n\tvar bisect = crossfilter.bisect = bisect_by(crossfilter_identity);\n\t\n\tbisect.by = bisect_by;\n\t\n\tfunction bisect_by(f) {\n\t\n\t  // Locate the insertion point for x in a to maintain sorted order. The\n\t  // arguments lo and hi may be used to specify a subset of the array which\n\t  // should be considered; by default the entire array is used. If x is already\n\t  // present in a, the insertion point will be before (to the left of) any\n\t  // existing entries. The return value is suitable for use as the first\n\t  // argument to `array.splice` assuming that a is already sorted.\n\t  //\n\t  // The returned insertion point i partitions the array a into two halves so\n\t  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n\t  // a[i:hi] for the right side.\n\t  function bisectLeft(a, x, lo, hi) {\n\t    while (lo < hi) {\n\t      var mid = lo + hi >>> 1;\n\t      if (f(a[mid]) < x) lo = mid + 1;\n\t      else hi = mid;\n\t    }\n\t    return lo;\n\t  }\n\t\n\t  // Similar to bisectLeft, but returns an insertion point which comes after (to\n\t  // the right of) any existing entries of x in a.\n\t  //\n\t  // The returned insertion point i partitions the array into two halves so that\n\t  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n\t  // a[i:hi] for the right side.\n\t  function bisectRight(a, x, lo, hi) {\n\t    while (lo < hi) {\n\t      var mid = lo + hi >>> 1;\n\t      if (x < f(a[mid])) hi = mid;\n\t      else lo = mid + 1;\n\t    }\n\t    return lo;\n\t  }\n\t\n\t  bisectRight.right = bisectRight;\n\t  bisectRight.left = bisectLeft;\n\t  return bisectRight;\n\t}\n\tvar heap = crossfilter.heap = heap_by(crossfilter_identity);\n\t\n\theap.by = heap_by;\n\t\n\tfunction heap_by(f) {\n\t\n\t  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n\t  // property such that the parent a[lo+i] is always less than or equal to its\n\t  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n\t  function heap(a, lo, hi) {\n\t    var n = hi - lo,\n\t        i = (n >>> 1) + 1;\n\t    while (--i > 0) sift(a, i, n, lo);\n\t    return a;\n\t  }\n\t\n\t  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n\t  // already a heap.\n\t  function sort(a, lo, hi) {\n\t    var n = hi - lo,\n\t        t;\n\t    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n\t    return a;\n\t  }\n\t\n\t  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n\t  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n\t  // incrementally, without incurring the full cost of reconstructing the heap.\n\t  function sift(a, i, n, lo) {\n\t    var d = a[--lo + i],\n\t        x = f(d),\n\t        child;\n\t    while ((child = i << 1) <= n) {\n\t      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n\t      if (x <= f(a[lo + child])) break;\n\t      a[lo + i] = a[lo + child];\n\t      i = child;\n\t    }\n\t    a[lo + i] = d;\n\t  }\n\t\n\t  heap.sort = sort;\n\t  return heap;\n\t}\n\tvar heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);\n\t\n\theapselect.by = heapselect_by;\n\t\n\tfunction heapselect_by(f) {\n\t  var heap = heap_by(f);\n\t\n\t  // Returns a new array containing the top k elements in the array a[lo:hi].\n\t  // The returned array is not sorted, but maintains the heap property. If k is\n\t  // greater than hi - lo, then fewer than k elements will be returned. The\n\t  // order of elements in a is unchanged by this operation.\n\t  function heapselect(a, lo, hi, k) {\n\t    var queue = new Array(k = Math.min(hi - lo, k)),\n\t        min,\n\t        i,\n\t        x,\n\t        d;\n\t\n\t    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n\t    heap(queue, 0, k);\n\t\n\t    if (lo < hi) {\n\t      min = f(queue[0]);\n\t      do {\n\t        if (x = f(d = a[lo]) > min) {\n\t          queue[0] = d;\n\t          min = f(heap(queue, 0, k)[0]);\n\t        }\n\t      } while (++lo < hi);\n\t    }\n\t\n\t    return queue;\n\t  }\n\t\n\t  return heapselect;\n\t}\n\tvar insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);\n\t\n\tinsertionsort.by = insertionsort_by;\n\t\n\tfunction insertionsort_by(f) {\n\t\n\t  function insertionsort(a, lo, hi) {\n\t    for (var i = lo + 1; i < hi; ++i) {\n\t      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n\t        a[j] = a[j - 1];\n\t      }\n\t      a[j] = t;\n\t    }\n\t    return a;\n\t  }\n\t\n\t  return insertionsort;\n\t}\n\t// Algorithm designed by Vladimir Yaroslavskiy.\n\t// Implementation based on the Dart project; see lib/dart/LICENSE for details.\n\t\n\tvar quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);\n\t\n\tquicksort.by = quicksort_by;\n\t\n\tfunction quicksort_by(f) {\n\t  var insertionsort = insertionsort_by(f);\n\t\n\t  function sort(a, lo, hi) {\n\t    return (hi - lo < quicksort_sizeThreshold\n\t        ? insertionsort\n\t        : quicksort)(a, lo, hi);\n\t  }\n\t\n\t  function quicksort(a, lo, hi) {\n\t    // Compute the two pivots by looking at 5 elements.\n\t    var sixth = (hi - lo) / 6 | 0,\n\t        i1 = lo + sixth,\n\t        i5 = hi - 1 - sixth,\n\t        i3 = lo + hi - 1 >> 1,  // The midpoint.\n\t        i2 = i3 - sixth,\n\t        i4 = i3 + sixth;\n\t\n\t    var e1 = a[i1], x1 = f(e1),\n\t        e2 = a[i2], x2 = f(e2),\n\t        e3 = a[i3], x3 = f(e3),\n\t        e4 = a[i4], x4 = f(e4),\n\t        e5 = a[i5], x5 = f(e5);\n\t\n\t    var t;\n\t\n\t    // Sort the selected 5 elements using a sorting network.\n\t    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n\t    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\t    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n\t    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n\t    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n\t    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n\t    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n\t    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n\t    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\t\n\t    var pivot1 = e2, pivotValue1 = x2,\n\t        pivot2 = e4, pivotValue2 = x4;\n\t\n\t    // e2 and e4 have been saved in the pivot variables. They will be written\n\t    // back, once the partitioning is finished.\n\t    a[i1] = e1;\n\t    a[i2] = a[lo];\n\t    a[i3] = e3;\n\t    a[i4] = a[hi - 1];\n\t    a[i5] = e5;\n\t\n\t    var less = lo + 1,   // First element in the middle partition.\n\t        great = hi - 2;  // Last element in the middle partition.\n\t\n\t    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n\t    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n\t    // with natural order (such as for Date objects), we must do two compares.\n\t    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n\t    if (pivotsEqual) {\n\t\n\t      // Degenerated case where the partitioning becomes a dutch national flag\n\t      // problem.\n\t      //\n\t      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n\t      //  ^             ^          ^             ^            ^\n\t      // left         less         k           great         right\n\t      //\n\t      // a[left] and a[right] are undefined and are filled after the\n\t      // partitioning.\n\t      //\n\t      // Invariants:\n\t      //   1) for x in ]left, less[ : x < pivot.\n\t      //   2) for x in [less, k[ : x == pivot.\n\t      //   3) for x in ]great, right[ : x > pivot.\n\t      for (var k = less; k <= great; ++k) {\n\t        var ek = a[k], xk = f(ek);\n\t        if (xk < pivotValue1) {\n\t          if (k !== less) {\n\t            a[k] = a[less];\n\t            a[less] = ek;\n\t          }\n\t          ++less;\n\t        } else if (xk > pivotValue1) {\n\t\n\t          // Find the first element <= pivot in the range [k - 1, great] and\n\t          // put [:ek:] there. We know that such an element must exist:\n\t          // When k == less, then el3 (which is equal to pivot) lies in the\n\t          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n\t          // Note that in the latter case invariant 2 will be violated for a\n\t          // short amount of time. The invariant will be restored when the\n\t          // pivots are put into their final positions.\n\t          while (true) {\n\t            var greatValue = f(a[great]);\n\t            if (greatValue > pivotValue1) {\n\t              great--;\n\t              // This is the only location in the while-loop where a new\n\t              // iteration is started.\n\t              continue;\n\t            } else if (greatValue < pivotValue1) {\n\t              // Triple exchange.\n\t              a[k] = a[less];\n\t              a[less++] = a[great];\n\t              a[great--] = ek;\n\t              break;\n\t            } else {\n\t              a[k] = a[great];\n\t              a[great--] = ek;\n\t              // Note: if great < k then we will exit the outer loop and fix\n\t              // invariant 2 (which we just violated).\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    } else {\n\t\n\t      // We partition the list into three parts:\n\t      //  1. < pivot1\n\t      //  2. >= pivot1 && <= pivot2\n\t      //  3. > pivot2\n\t      //\n\t      // During the loop we have:\n\t      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n\t      //  ^            ^                        ^              ^             ^\n\t      // left         less                     k              great        right\n\t      //\n\t      // a[left] and a[right] are undefined and are filled after the\n\t      // partitioning.\n\t      //\n\t      // Invariants:\n\t      //   1. for x in ]left, less[ : x < pivot1\n\t      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n\t      //   3. for x in ]great, right[ : x > pivot2\n\t      for (var k = less; k <= great; k++) {\n\t        var ek = a[k], xk = f(ek);\n\t        if (xk < pivotValue1) {\n\t          if (k !== less) {\n\t            a[k] = a[less];\n\t            a[less] = ek;\n\t          }\n\t          ++less;\n\t        } else {\n\t          if (xk > pivotValue2) {\n\t            while (true) {\n\t              var greatValue = f(a[great]);\n\t              if (greatValue > pivotValue2) {\n\t                great--;\n\t                if (great < k) break;\n\t                // This is the only location inside the loop where a new\n\t                // iteration is started.\n\t                continue;\n\t              } else {\n\t                // a[great] <= pivot2.\n\t                if (greatValue < pivotValue1) {\n\t                  // Triple exchange.\n\t                  a[k] = a[less];\n\t                  a[less++] = a[great];\n\t                  a[great--] = ek;\n\t                } else {\n\t                  // a[great] >= pivot1.\n\t                  a[k] = a[great];\n\t                  a[great--] = ek;\n\t                }\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // Move pivots into their final positions.\n\t    // We shrunk the list from both sides (a[left] and a[right] have\n\t    // meaningless values in them) and now we move elements from the first\n\t    // and third partition into these locations so that we can store the\n\t    // pivots.\n\t    a[lo] = a[less - 1];\n\t    a[less - 1] = pivot1;\n\t    a[hi - 1] = a[great + 1];\n\t    a[great + 1] = pivot2;\n\t\n\t    // The list is now partitioned into three partitions:\n\t    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n\t    //  ^            ^                        ^             ^\n\t    // left         less                     great        right\n\t\n\t    // Recursive descent. (Don't include the pivot values.)\n\t    sort(a, lo, less - 1);\n\t    sort(a, great + 2, hi);\n\t\n\t    if (pivotsEqual) {\n\t      // All elements in the second partition are equal to the pivot. No\n\t      // need to sort them.\n\t      return a;\n\t    }\n\t\n\t    // In theory it should be enough to call _doSort recursively on the second\n\t    // partition.\n\t    // The Android source however removes the pivot elements from the recursive\n\t    // call if the second partition is too large (more than 2/3 of the list).\n\t    if (less < i1 && great > i5) {\n\t      var lessValue, greatValue;\n\t      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n\t      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\t\n\t      // Copy paste of the previous 3-way partitioning with adaptions.\n\t      //\n\t      // We partition the list into three parts:\n\t      //  1. == pivot1\n\t      //  2. > pivot1 && < pivot2\n\t      //  3. == pivot2\n\t      //\n\t      // During the loop we have:\n\t      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n\t      //              ^                      ^              ^\n\t      //            less                     k              great\n\t      //\n\t      // Invariants:\n\t      //   1. for x in [ *, less[ : x == pivot1\n\t      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n\t      //   3. for x in ]great, * ] : x == pivot2\n\t      for (var k = less; k <= great; k++) {\n\t        var ek = a[k], xk = f(ek);\n\t        if (xk <= pivotValue1 && xk >= pivotValue1) {\n\t          if (k !== less) {\n\t            a[k] = a[less];\n\t            a[less] = ek;\n\t          }\n\t          less++;\n\t        } else {\n\t          if (xk <= pivotValue2 && xk >= pivotValue2) {\n\t            while (true) {\n\t              var greatValue = f(a[great]);\n\t              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n\t                great--;\n\t                if (great < k) break;\n\t                // This is the only location inside the loop where a new\n\t                // iteration is started.\n\t                continue;\n\t              } else {\n\t                // a[great] < pivot2.\n\t                if (greatValue < pivotValue1) {\n\t                  // Triple exchange.\n\t                  a[k] = a[less];\n\t                  a[less++] = a[great];\n\t                  a[great--] = ek;\n\t                } else {\n\t                  // a[great] == pivot1.\n\t                  a[k] = a[great];\n\t                  a[great--] = ek;\n\t                }\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // The second partition has now been cleared of pivot elements and looks\n\t    // as follows:\n\t    // [  *  |  > pivot1 && < pivot2  | * ]\n\t    //        ^                      ^\n\t    //       less                  great\n\t    // Sort the second partition using recursive descent.\n\t\n\t    // The second partition looks as follows:\n\t    // [  *  |  >= pivot1 && <= pivot2  | * ]\n\t    //        ^                        ^\n\t    //       less                    great\n\t    // Simply sort it by recursive descent.\n\t\n\t    return sort(a, less, great + 1);\n\t  }\n\t\n\t  return sort;\n\t}\n\t\n\tvar quicksort_sizeThreshold = 32;\n\tvar crossfilter_array8 = crossfilter_arrayUntyped,\n\t    crossfilter_array16 = crossfilter_arrayUntyped,\n\t    crossfilter_array32 = crossfilter_arrayUntyped,\n\t    crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,\n\t    crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;\n\t\n\tif (typeof Uint8Array !== \"undefined\") {\n\t  crossfilter_array8 = function(n) { return new Uint8Array(n); };\n\t  crossfilter_array16 = function(n) { return new Uint16Array(n); };\n\t  crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\t\n\t  crossfilter_arrayLengthen = function(array, length) {\n\t    if (array.length >= length) return array;\n\t    var copy = new array.constructor(length);\n\t    copy.set(array);\n\t    return copy;\n\t  };\n\t\n\t  crossfilter_arrayWiden = function(array, width) {\n\t    var copy;\n\t    switch (width) {\n\t      case 16: copy = crossfilter_array16(array.length); break;\n\t      case 32: copy = crossfilter_array32(array.length); break;\n\t      default: throw new Error(\"invalid array width!\");\n\t    }\n\t    copy.set(array);\n\t    return copy;\n\t  };\n\t}\n\t\n\tfunction crossfilter_arrayUntyped(n) {\n\t  var array = new Array(n), i = -1;\n\t  while (++i < n) array[i] = 0;\n\t  return array;\n\t}\n\t\n\tfunction crossfilter_arrayLengthenUntyped(array, length) {\n\t  var n = array.length;\n\t  while (n < length) array[n++] = 0;\n\t  return array;\n\t}\n\t\n\tfunction crossfilter_arrayWidenUntyped(array, width) {\n\t  if (width > 32) throw new Error(\"invalid array width!\");\n\t  return array;\n\t}\n\tfunction crossfilter_filterExact(bisect, value) {\n\t  return function(values) {\n\t    var n = values.length;\n\t    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n\t  };\n\t}\n\t\n\tfunction crossfilter_filterRange(bisect, range) {\n\t  var min = range[0],\n\t      max = range[1];\n\t  return function(values) {\n\t    var n = values.length;\n\t    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n\t  };\n\t}\n\t\n\tfunction crossfilter_filterAll(values) {\n\t  return [0, values.length];\n\t}\n\tfunction crossfilter_null() {\n\t  return null;\n\t}\n\tfunction crossfilter_zero() {\n\t  return 0;\n\t}\n\tfunction crossfilter_reduceIncrement(p) {\n\t  return p + 1;\n\t}\n\t\n\tfunction crossfilter_reduceDecrement(p) {\n\t  return p - 1;\n\t}\n\t\n\tfunction crossfilter_reduceAdd(f) {\n\t  return function(p, v) {\n\t    return p + +f(v);\n\t  };\n\t}\n\t\n\tfunction crossfilter_reduceSubtract(f) {\n\t  return function(p, v) {\n\t    return p - f(v);\n\t  };\n\t}\n\texports.crossfilter = crossfilter;\n\t\n\tfunction crossfilter() {\n\t  var crossfilter = {\n\t    add: add,\n\t    remove: removeData,\n\t    dimension: dimension,\n\t    groupAll: groupAll,\n\t    size: size\n\t  };\n\t\n\t  var data = [], // the records\n\t      n = 0, // the number of records; data.length\n\t      m = 0, // a bit mask representing which dimensions are in use\n\t      M = 8, // number of dimensions that can fit in `filters`\n\t      filters = crossfilter_array8(0), // M bits per record; 1 is filtered out\n\t      filterListeners = [], // when the filters change\n\t      dataListeners = [], // when data is added\n\t      removeDataListeners = []; // when data is removed\n\t\n\t  // Adds the specified new records to this crossfilter.\n\t  function add(newData) {\n\t    var n0 = n,\n\t        n1 = newData.length;\n\t\n\t    // If there's actually new data to add…\n\t    // Merge the new data into the existing data.\n\t    // Lengthen the filter bitset to handle the new records.\n\t    // Notify listeners (dimensions and groups) that new data is available.\n\t    if (n1) {\n\t      data = data.concat(newData);\n\t      filters = crossfilter_arrayLengthen(filters, n += n1);\n\t      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n\t    }\n\t\n\t    return crossfilter;\n\t  }\n\t\n\t  // Removes all records that match the current filters.\n\t  function removeData() {\n\t    var newIndex = crossfilter_index(n, n),\n\t        removed = [];\n\t    for (var i = 0, j = 0; i < n; ++i) {\n\t      if (filters[i]) newIndex[i] = j++;\n\t      else removed.push(i);\n\t    }\n\t\n\t    // Remove all matching records from groups.\n\t    filterListeners.forEach(function(l) { l(0, [], removed); });\n\t\n\t    // Update indexes.\n\t    removeDataListeners.forEach(function(l) { l(newIndex); });\n\t\n\t    // Remove old filters and data by overwriting.\n\t    for (var i = 0, j = 0, k; i < n; ++i) {\n\t      if (k = filters[i]) {\n\t        if (i !== j) filters[j] = k, data[j] = data[i];\n\t        ++j;\n\t      }\n\t    }\n\t    data.length = j;\n\t    while (n > j) filters[--n] = 0;\n\t  }\n\t\n\t  // Adds a new dimension with the specified value accessor function.\n\t  function dimension(value) {\n\t    var dimension = {\n\t      filter: filter,\n\t      filterExact: filterExact,\n\t      filterRange: filterRange,\n\t      filterFunction: filterFunction,\n\t      filterAll: filterAll,\n\t      top: top,\n\t      bottom: bottom,\n\t      group: group,\n\t      groupAll: groupAll,\n\t      dispose: dispose,\n\t      remove: dispose // for backwards-compatibility\n\t    };\n\t\n\t    var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000\n\t        zero = ~one, // inverted one, e.g., 11110111\n\t        values, // sorted, cached array\n\t        index, // value rank ↦ object id\n\t        newValues, // temporary array storing newly-added values\n\t        newIndex, // temporary array storing newly-added index\n\t        sort = quicksort_by(function(i) { return newValues[i]; }),\n\t        refilter = crossfilter_filterAll, // for recomputing filter\n\t        refilterFunction, // the custom filter function in use\n\t        indexListeners = [], // when data is added\n\t        dimensionGroups = [],\n\t        lo0 = 0,\n\t        hi0 = 0;\n\t\n\t    // Updating a dimension is a two-stage process. First, we must update the\n\t    // associated filters for the newly-added records. Once all dimensions have\n\t    // updated their filters, the groups are notified to update.\n\t    dataListeners.unshift(preAdd);\n\t    dataListeners.push(postAdd);\n\t\n\t    removeDataListeners.push(removeData);\n\t\n\t    // Incorporate any existing data into this dimension, and make sure that the\n\t    // filter bitset is wide enough to handle the new dimension.\n\t    m |= one;\n\t    if (M >= 32 ? !one : m & -(1 << M)) {\n\t      filters = crossfilter_arrayWiden(filters, M <<= 1);\n\t    }\n\t    preAdd(data, 0, n);\n\t    postAdd(data, 0, n);\n\t\n\t    // Incorporates the specified new records into this dimension.\n\t    // This function is responsible for updating filters, values, and index.\n\t    function preAdd(newData, n0, n1) {\n\t\n\t      // Permute new values into natural order using a sorted index.\n\t      newValues = newData.map(value);\n\t      newIndex = sort(crossfilter_range(n1), 0, n1);\n\t      newValues = permute(newValues, newIndex);\n\t\n\t      // Bisect newValues to determine which new records are selected.\n\t      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;\n\t      if (refilterFunction) {\n\t        for (i = 0; i < n1; ++i) {\n\t          if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;\n\t        }\n\t      } else {\n\t        for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;\n\t        for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;\n\t      }\n\t\n\t      // If this dimension previously had no data, then we don't need to do the\n\t      // more expensive merge operation; use the new values and index as-is.\n\t      if (!n0) {\n\t        values = newValues;\n\t        index = newIndex;\n\t        lo0 = lo1;\n\t        hi0 = hi1;\n\t        return;\n\t      }\n\t\n\t      var oldValues = values,\n\t          oldIndex = index,\n\t          i0 = 0,\n\t          i1 = 0;\n\t\n\t      // Otherwise, create new arrays into which to merge new and old.\n\t      values = new Array(n);\n\t      index = crossfilter_index(n, n);\n\t\n\t      // Merge the old and new sorted values, and old and new index.\n\t      for (i = 0; i0 < n0 && i1 < n1; ++i) {\n\t        if (oldValues[i0] < newValues[i1]) {\n\t          values[i] = oldValues[i0];\n\t          index[i] = oldIndex[i0++];\n\t        } else {\n\t          values[i] = newValues[i1];\n\t          index[i] = newIndex[i1++] + n0;\n\t        }\n\t      }\n\t\n\t      // Add any remaining old values.\n\t      for (; i0 < n0; ++i0, ++i) {\n\t        values[i] = oldValues[i0];\n\t        index[i] = oldIndex[i0];\n\t      }\n\t\n\t      // Add any remaining new values.\n\t      for (; i1 < n1; ++i1, ++i) {\n\t        values[i] = newValues[i1];\n\t        index[i] = newIndex[i1] + n0;\n\t      }\n\t\n\t      // Bisect again to recompute lo0 and hi0.\n\t      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n\t    }\n\t\n\t    // When all filters have updated, notify index listeners of the new values.\n\t    function postAdd(newData, n0, n1) {\n\t      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n\t      newValues = newIndex = null;\n\t    }\n\t\n\t    function removeData(reIndex) {\n\t      for (var i = 0, j = 0, k; i < n; ++i) {\n\t        if (filters[k = index[i]]) {\n\t          if (i !== j) values[j] = values[i];\n\t          index[j] = reIndex[k];\n\t          ++j;\n\t        }\n\t      }\n\t      values.length = j;\n\t      while (j < n) index[j++] = 0;\n\t\n\t      // Bisect again to recompute lo0 and hi0.\n\t      var bounds = refilter(values);\n\t      lo0 = bounds[0], hi0 = bounds[1];\n\t    }\n\t\n\t    // Updates the selected values based on the specified bounds [lo, hi].\n\t    // This implementation is used by all the public filter methods.\n\t    function filterIndexBounds(bounds) {\n\t      var lo1 = bounds[0],\n\t          hi1 = bounds[1];\n\t\n\t      if (refilterFunction) {\n\t        refilterFunction = null;\n\t        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });\n\t        lo0 = lo1;\n\t        hi0 = hi1;\n\t        return dimension;\n\t      }\n\t\n\t      var i,\n\t          j,\n\t          k,\n\t          added = [],\n\t          removed = [];\n\t\n\t      // Fast incremental update based on previous lo index.\n\t      if (lo1 < lo0) {\n\t        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          added.push(k);\n\t        }\n\t      } else if (lo1 > lo0) {\n\t        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          removed.push(k);\n\t        }\n\t      }\n\t\n\t      // Fast incremental update based on previous hi index.\n\t      if (hi1 > hi0) {\n\t        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          added.push(k);\n\t        }\n\t      } else if (hi1 < hi0) {\n\t        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          removed.push(k);\n\t        }\n\t      }\n\t\n\t      lo0 = lo1;\n\t      hi0 = hi1;\n\t      filterListeners.forEach(function(l) { l(one, added, removed); });\n\t      return dimension;\n\t    }\n\t\n\t    // Filters this dimension using the specified range, value, or null.\n\t    // If the range is null, this is equivalent to filterAll.\n\t    // If the range is an array, this is equivalent to filterRange.\n\t    // Otherwise, this is equivalent to filterExact.\n\t    function filter(range) {\n\t      return range == null\n\t          ? filterAll() : Array.isArray(range)\n\t          ? filterRange(range) : typeof range === \"function\"\n\t          ? filterFunction(range)\n\t          : filterExact(range);\n\t    }\n\t\n\t    // Filters this dimension to select the exact value.\n\t    function filterExact(value) {\n\t      return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));\n\t    }\n\t\n\t    // Filters this dimension to select the specified range [lo, hi].\n\t    // The lower bound is inclusive, and the upper bound is exclusive.\n\t    function filterRange(range) {\n\t      return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));\n\t    }\n\t\n\t    // Clears any filters on this dimension.\n\t    function filterAll() {\n\t      return filterIndexBounds((refilter = crossfilter_filterAll)(values));\n\t    }\n\t\n\t    // Filters this dimension using an arbitrary function.\n\t    function filterFunction(f) {\n\t      refilter = crossfilter_filterAll;\n\t\n\t      filterIndexFunction(refilterFunction = f);\n\t\n\t      lo0 = 0;\n\t      hi0 = n;\n\t\n\t      return dimension;\n\t    }\n\t\n\t    function filterIndexFunction(f) {\n\t      var i,\n\t          k,\n\t          x,\n\t          added = [],\n\t          removed = [];\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n\t          if (x) filters[k] &= zero, added.push(k);\n\t          else filters[k] |= one, removed.push(k);\n\t        }\n\t      }\n\t      filterListeners.forEach(function(l) { l(one, added, removed); });\n\t    }\n\t\n\t    // Returns the top K selected records based on this dimension's order.\n\t    // Note: observes this dimension's filter, unlike group and groupAll.\n\t    function top(k) {\n\t      var array = [],\n\t          i = hi0,\n\t          j;\n\t\n\t      while (--i >= lo0 && k > 0) {\n\t        if (!filters[j = index[i]]) {\n\t          array.push(data[j]);\n\t          --k;\n\t        }\n\t      }\n\t\n\t      return array;\n\t    }\n\t\n\t    // Returns the bottom K selected records based on this dimension's order.\n\t    // Note: observes this dimension's filter, unlike group and groupAll.\n\t    function bottom(k) {\n\t      var array = [],\n\t          i = lo0,\n\t          j;\n\t\n\t      while (i < hi0 && k > 0) {\n\t        if (!filters[j = index[i]]) {\n\t          array.push(data[j]);\n\t          --k;\n\t        }\n\t        i++;\n\t      }\n\t\n\t      return array;\n\t    }\n\t\n\t    // Adds a new group to this dimension, using the specified key function.\n\t    function group(key) {\n\t      var group = {\n\t        top: top,\n\t        all: all,\n\t        reduce: reduce,\n\t        reduceCount: reduceCount,\n\t        reduceSum: reduceSum,\n\t        order: order,\n\t        orderNatural: orderNatural,\n\t        size: size,\n\t        dispose: dispose,\n\t        remove: dispose // for backwards-compatibility\n\t      };\n\t\n\t      // Ensure that this group will be removed when the dimension is removed.\n\t      dimensionGroups.push(group);\n\t\n\t      var groups, // array of {key, value}\n\t          groupIndex, // object id ↦ group id\n\t          groupWidth = 8,\n\t          groupCapacity = crossfilter_capacity(groupWidth),\n\t          k = 0, // cardinality\n\t          select,\n\t          heap,\n\t          reduceAdd,\n\t          reduceRemove,\n\t          reduceInitial,\n\t          update = crossfilter_null,\n\t          reset = crossfilter_null,\n\t          resetNeeded = true,\n\t          groupAll = key === crossfilter_null;\n\t\n\t      if (arguments.length < 1) key = crossfilter_identity;\n\t\n\t      // The group listens to the crossfilter for when any dimension changes, so\n\t      // that it can update the associated reduce values. It must also listen to\n\t      // the parent dimension for when data is added, and compute new keys.\n\t      filterListeners.push(update);\n\t      indexListeners.push(add);\n\t      removeDataListeners.push(removeData);\n\t\n\t      // Incorporate any existing data into the grouping.\n\t      add(values, index, 0, n);\n\t\n\t      // Incorporates the specified new values into this group.\n\t      // This function is responsible for updating groups and groupIndex.\n\t      function add(newValues, newIndex, n0, n1) {\n\t        var oldGroups = groups,\n\t            reIndex = crossfilter_index(k, groupCapacity),\n\t            add = reduceAdd,\n\t            initial = reduceInitial,\n\t            k0 = k, // old cardinality\n\t            i0 = 0, // index of old group\n\t            i1 = 0, // index of new record\n\t            j, // object id\n\t            g0, // old group\n\t            x0, // old key\n\t            x1, // new key\n\t            g, // group to add\n\t            x; // key of group to add\n\t\n\t        // If a reset is needed, we don't need to update the reduce values.\n\t        if (resetNeeded) add = initial = crossfilter_null;\n\t\n\t        // Reset the new groups (k is a lower bound).\n\t        // Also, make sure that groupIndex exists and is long enough.\n\t        groups = new Array(k), k = 0;\n\t        groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n\t\n\t        // Get the first old key (x0 of g0), if it exists.\n\t        if (k0) x0 = (g0 = oldGroups[0]).key;\n\t\n\t        // Find the first new key (x1), skipping NaN keys.\n\t        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\t\n\t        // While new keys remain…\n\t        while (i1 < n1) {\n\t\n\t          // Determine the lesser of the two current keys; new and old.\n\t          // If there are no old keys remaining, then always add the new key.\n\t          if (g0 && x0 <= x1) {\n\t            g = g0, x = x0;\n\t\n\t            // Record the new index of the old group.\n\t            reIndex[i0] = k;\n\t\n\t            // Retrieve the next old key.\n\t            if (g0 = oldGroups[++i0]) x0 = g0.key;\n\t          } else {\n\t            g = {key: x1, value: initial()}, x = x1;\n\t          }\n\t\n\t          // Add the lesser group.\n\t          groups[k] = g;\n\t\n\t          // Add any selected records belonging to the added group, while\n\t          // advancing the new key and populating the associated group index.\n\t          while (!(x1 > x)) {\n\t            groupIndex[j = newIndex[i1] + n0] = k;\n\t            if (!(filters[j] & zero)) g.value = add(g.value, data[j]);\n\t            if (++i1 >= n1) break;\n\t            x1 = key(newValues[i1]);\n\t          }\n\t\n\t          groupIncrement();\n\t        }\n\t\n\t        // Add any remaining old groups that were greater than all new keys.\n\t        // No incremental reduce is needed; these groups have no new records.\n\t        // Also record the new index of the old group.\n\t        while (i0 < k0) {\n\t          groups[reIndex[i0] = k] = oldGroups[i0++];\n\t          groupIncrement();\n\t        }\n\t\n\t        // If we added any new groups before any old groups,\n\t        // update the group index of all the old records.\n\t        if (k > i0) for (i0 = 0; i0 < n0; ++i0) {\n\t          groupIndex[i0] = reIndex[groupIndex[i0]];\n\t        }\n\t\n\t        // Modify the update and reset behavior based on the cardinality.\n\t        // If the cardinality is less than or equal to one, then the groupIndex\n\t        // is not needed. If the cardinality is zero, then there are no records\n\t        // and therefore no groups to update or reset. Note that we also must\n\t        // change the registered listener to point to the new method.\n\t        j = filterListeners.indexOf(update);\n\t        if (k > 1) {\n\t          update = updateMany;\n\t          reset = resetMany;\n\t        } else {\n\t          if (!k && groupAll) {\n\t            k = 1;\n\t            groups = [{key: null, value: initial()}];\n\t          }\n\t          if (k === 1) {\n\t            update = updateOne;\n\t            reset = resetOne;\n\t          } else {\n\t            update = crossfilter_null;\n\t            reset = crossfilter_null;\n\t          }\n\t          groupIndex = null;\n\t        }\n\t        filterListeners[j] = update;\n\t\n\t        // Count the number of added groups,\n\t        // and widen the group index as needed.\n\t        function groupIncrement() {\n\t          if (++k === groupCapacity) {\n\t            reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);\n\t            groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);\n\t            groupCapacity = crossfilter_capacity(groupWidth);\n\t          }\n\t        }\n\t      }\n\t\n\t      function removeData() {\n\t        if (k > 1) {\n\t          var oldK = k,\n\t              oldGroups = groups,\n\t              seenGroups = crossfilter_index(oldK, oldK);\n\t\n\t          // Filter out non-matches by copying matching group index entries to\n\t          // the beginning of the array.\n\t          for (var i = 0, j = 0; i < n; ++i) {\n\t            if (filters[i]) {\n\t              seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n\t              ++j;\n\t            }\n\t          }\n\t\n\t          // Reassemble groups including only those groups that were referred\n\t          // to by matching group index entries.  Note the new group index in\n\t          // seenGroups.\n\t          groups = [], k = 0;\n\t          for (i = 0; i < oldK; ++i) {\n\t            if (seenGroups[i]) {\n\t              seenGroups[i] = k++;\n\t              groups.push(oldGroups[i]);\n\t            }\n\t          }\n\t\n\t          if (k > 1) {\n\t            // Reindex the group index using seenGroups to find the new index.\n\t            for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n\t          } else {\n\t            groupIndex = null;\n\t          }\n\t          filterListeners[filterListeners.indexOf(update)] = k > 1\n\t              ? (reset = resetMany, update = updateMany)\n\t              : k === 1 ? (reset = resetOne, update = updateOne)\n\t              : reset = update = crossfilter_null;\n\t        } else if (k === 1) {\n\t          if (groupAll) return;\n\t          for (var i = 0; i < n; ++i) if (filters[i]) return;\n\t          groups = [], k = 0;\n\t          filterListeners[filterListeners.indexOf(update)] =\n\t          update = reset = crossfilter_null;\n\t        }\n\t      }\n\t\n\t      // Reduces the specified selected or deselected records.\n\t      // This function is only used when the cardinality is greater than 1.\n\t      function updateMany(filterOne, added, removed) {\n\t        if (filterOne === one || resetNeeded) return;\n\t\n\t        var i,\n\t            k,\n\t            n,\n\t            g;\n\t\n\t        // Add the added values.\n\t        for (i = 0, n = added.length; i < n; ++i) {\n\t          if (!(filters[k = added[i]] & zero)) {\n\t            g = groups[groupIndex[k]];\n\t            g.value = reduceAdd(g.value, data[k]);\n\t          }\n\t        }\n\t\n\t        // Remove the removed values.\n\t        for (i = 0, n = removed.length; i < n; ++i) {\n\t          if ((filters[k = removed[i]] & zero) === filterOne) {\n\t            g = groups[groupIndex[k]];\n\t            g.value = reduceRemove(g.value, data[k]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Reduces the specified selected or deselected records.\n\t      // This function is only used when the cardinality is 1.\n\t      function updateOne(filterOne, added, removed) {\n\t        if (filterOne === one || resetNeeded) return;\n\t\n\t        var i,\n\t            k,\n\t            n,\n\t            g = groups[0];\n\t\n\t        // Add the added values.\n\t        for (i = 0, n = added.length; i < n; ++i) {\n\t          if (!(filters[k = added[i]] & zero)) {\n\t            g.value = reduceAdd(g.value, data[k]);\n\t          }\n\t        }\n\t\n\t        // Remove the removed values.\n\t        for (i = 0, n = removed.length; i < n; ++i) {\n\t          if ((filters[k = removed[i]] & zero) === filterOne) {\n\t            g.value = reduceRemove(g.value, data[k]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Recomputes the group reduce values from scratch.\n\t      // This function is only used when the cardinality is greater than 1.\n\t      function resetMany() {\n\t        var i,\n\t            g;\n\t\n\t        // Reset all group values.\n\t        for (i = 0; i < k; ++i) {\n\t          groups[i].value = reduceInitial();\n\t        }\n\t\n\t        // Add any selected records.\n\t        for (i = 0; i < n; ++i) {\n\t          if (!(filters[i] & zero)) {\n\t            g = groups[groupIndex[i]];\n\t            g.value = reduceAdd(g.value, data[i]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Recomputes the group reduce values from scratch.\n\t      // This function is only used when the cardinality is 1.\n\t      function resetOne() {\n\t        var i,\n\t            g = groups[0];\n\t\n\t        // Reset the singleton group values.\n\t        g.value = reduceInitial();\n\t\n\t        // Add any selected records.\n\t        for (i = 0; i < n; ++i) {\n\t          if (!(filters[i] & zero)) {\n\t            g.value = reduceAdd(g.value, data[i]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Returns the array of group values, in the dimension's natural order.\n\t      function all() {\n\t        if (resetNeeded) reset(), resetNeeded = false;\n\t        return groups;\n\t      }\n\t\n\t      // Returns a new array containing the top K group values, in reduce order.\n\t      function top(k) {\n\t        var top = select(all(), 0, groups.length, k);\n\t        return heap.sort(top, 0, top.length);\n\t      }\n\t\n\t      // Sets the reduce behavior for this group to use the specified functions.\n\t      // This method lazily recomputes the reduce values, waiting until needed.\n\t      function reduce(add, remove, initial) {\n\t        reduceAdd = add;\n\t        reduceRemove = remove;\n\t        reduceInitial = initial;\n\t        resetNeeded = true;\n\t        return group;\n\t      }\n\t\n\t      // A convenience method for reducing by count.\n\t      function reduceCount() {\n\t        return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n\t      }\n\t\n\t      // A convenience method for reducing by sum(value).\n\t      function reduceSum(value) {\n\t        return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n\t      }\n\t\n\t      // Sets the reduce order, using the specified accessor.\n\t      function order(value) {\n\t        select = heapselect_by(valueOf);\n\t        heap = heap_by(valueOf);\n\t        function valueOf(d) { return value(d.value); }\n\t        return group;\n\t      }\n\t\n\t      // A convenience method for natural ordering by reduce value.\n\t      function orderNatural() {\n\t        return order(crossfilter_identity);\n\t      }\n\t\n\t      // Returns the cardinality of this group, irrespective of any filters.\n\t      function size() {\n\t        return k;\n\t      }\n\t\n\t      // Removes this group and associated event listeners.\n\t      function dispose() {\n\t        var i = filterListeners.indexOf(update);\n\t        if (i >= 0) filterListeners.splice(i, 1);\n\t        i = indexListeners.indexOf(add);\n\t        if (i >= 0) indexListeners.splice(i, 1);\n\t        i = removeDataListeners.indexOf(removeData);\n\t        if (i >= 0) removeDataListeners.splice(i, 1);\n\t        return group;\n\t      }\n\t\n\t      return reduceCount().orderNatural();\n\t    }\n\t\n\t    // A convenience function for generating a singleton group.\n\t    function groupAll() {\n\t      var g = group(crossfilter_null), all = g.all;\n\t      delete g.all;\n\t      delete g.top;\n\t      delete g.order;\n\t      delete g.orderNatural;\n\t      delete g.size;\n\t      g.value = function() { return all()[0].value; };\n\t      return g;\n\t    }\n\t\n\t    // Removes this dimension and associated groups and event listeners.\n\t    function dispose() {\n\t      dimensionGroups.forEach(function(group) { group.dispose(); });\n\t      var i = dataListeners.indexOf(preAdd);\n\t      if (i >= 0) dataListeners.splice(i, 1);\n\t      i = dataListeners.indexOf(postAdd);\n\t      if (i >= 0) dataListeners.splice(i, 1);\n\t      i = removeDataListeners.indexOf(removeData);\n\t      if (i >= 0) removeDataListeners.splice(i, 1);\n\t      m &= zero;\n\t      return filterAll();\n\t    }\n\t\n\t    return dimension;\n\t  }\n\t\n\t  // A convenience method for groupAll on a dummy dimension.\n\t  // This implementation can be optimized since it always has cardinality 1.\n\t  function groupAll() {\n\t    var group = {\n\t      reduce: reduce,\n\t      reduceCount: reduceCount,\n\t      reduceSum: reduceSum,\n\t      value: value,\n\t      dispose: dispose,\n\t      remove: dispose // for backwards-compatibility\n\t    };\n\t\n\t    var reduceValue,\n\t        reduceAdd,\n\t        reduceRemove,\n\t        reduceInitial,\n\t        resetNeeded = true;\n\t\n\t    // The group listens to the crossfilter for when any dimension changes, so\n\t    // that it can update the reduce value. It must also listen to the parent\n\t    // dimension for when data is added.\n\t    filterListeners.push(update);\n\t    dataListeners.push(add);\n\t\n\t    // For consistency; actually a no-op since resetNeeded is true.\n\t    add(data, 0, n);\n\t\n\t    // Incorporates the specified new values into this group.\n\t    function add(newData, n0) {\n\t      var i;\n\t\n\t      if (resetNeeded) return;\n\t\n\t      // Add the added values.\n\t      for (i = n0; i < n; ++i) {\n\t        if (!filters[i]) {\n\t          reduceValue = reduceAdd(reduceValue, data[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Reduces the specified selected or deselected records.\n\t    function update(filterOne, added, removed) {\n\t      var i,\n\t          k,\n\t          n;\n\t\n\t      if (resetNeeded) return;\n\t\n\t      // Add the added values.\n\t      for (i = 0, n = added.length; i < n; ++i) {\n\t        if (!filters[k = added[i]]) {\n\t          reduceValue = reduceAdd(reduceValue, data[k]);\n\t        }\n\t      }\n\t\n\t      // Remove the removed values.\n\t      for (i = 0, n = removed.length; i < n; ++i) {\n\t        if (filters[k = removed[i]] === filterOne) {\n\t          reduceValue = reduceRemove(reduceValue, data[k]);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Recomputes the group reduce value from scratch.\n\t    function reset() {\n\t      var i;\n\t\n\t      reduceValue = reduceInitial();\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if (!filters[i]) {\n\t          reduceValue = reduceAdd(reduceValue, data[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Sets the reduce behavior for this group to use the specified functions.\n\t    // This method lazily recomputes the reduce value, waiting until needed.\n\t    function reduce(add, remove, initial) {\n\t      reduceAdd = add;\n\t      reduceRemove = remove;\n\t      reduceInitial = initial;\n\t      resetNeeded = true;\n\t      return group;\n\t    }\n\t\n\t    // A convenience method for reducing by count.\n\t    function reduceCount() {\n\t      return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n\t    }\n\t\n\t    // A convenience method for reducing by sum(value).\n\t    function reduceSum(value) {\n\t      return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n\t    }\n\t\n\t    // Returns the computed reduce value.\n\t    function value() {\n\t      if (resetNeeded) reset(), resetNeeded = false;\n\t      return reduceValue;\n\t    }\n\t\n\t    // Removes this group and associated event listeners.\n\t    function dispose() {\n\t      var i = filterListeners.indexOf(update);\n\t      if (i >= 0) filterListeners.splice(i);\n\t      i = dataListeners.indexOf(add);\n\t      if (i >= 0) dataListeners.splice(i);\n\t      return group;\n\t    }\n\t\n\t    return reduceCount();\n\t  }\n\t\n\t  // Returns the number of records in this crossfilter, irrespective of any filters.\n\t  function size() {\n\t    return n;\n\t  }\n\t\n\t  return arguments.length\n\t      ? add(arguments[0])\n\t      : crossfilter;\n\t}\n\t\n\t// Returns an array of size n, big enough to store ids up to m.\n\tfunction crossfilter_index(n, m) {\n\t  return (m < 0x101\n\t      ? crossfilter_array8 : m < 0x10001\n\t      ? crossfilter_array16\n\t      : crossfilter_array32)(n);\n\t}\n\t\n\t// Constructs a new array of size n, with sequential values from 0 to n - 1.\n\tfunction crossfilter_range(n) {\n\t  var range = crossfilter_index(n, n);\n\t  for (var i = -1; ++i < n;) range[i] = i;\n\t  return range;\n\t}\n\t\n\tfunction crossfilter_capacity(w) {\n\t  return w === 8\n\t      ? 0x100 : w === 16\n\t      ? 0x10000\n\t      : 0x100000000;\n\t}\n\t})(typeof exports !== 'undefined' && exports || this);\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.16\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash 4.5.1 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash -d -o ./foo/lodash.js`\n\t * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.5.1';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256,\n\t      FLIP_FLAG = 512;\n\t\n\t  /** Used to compose bitmasks for comparison styles. */\n\t  var UNORDERED_COMPARE_FLAG = 1,\n\t      PARTIAL_COMPARE_FLAG = 2;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0x/i;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsQuoteRange = '\\\\u2018\\\\u2019\\\\u201c\\\\u201d',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\t\n\t  /** Used to match non-compound words composed of alphanumeric characters. */\n\t  var reBasicWord = /[a-zA-Z0-9]+/g;\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reComplexWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsUpperMisc + '+(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsLowerMisc + '+',\n\t    rsUpper + '+',\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasComplexWord = /[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_',\n\t    'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[mapTag] = cloneableTags[numberTag] =\n\t  cloneableTags[objectTag] = cloneableTags[regexpTag] =\n\t  cloneableTags[setTag] = cloneableTags[stringTag] =\n\t  cloneableTags[symbolTag] = cloneableTags[uint8Tag] =\n\t  cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] =\n\t  cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n\t    ? exports\n\t    : undefined;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n\t    ? module\n\t    : undefined;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = (freeModule && freeModule.exports === freeExports)\n\t    ? freeExports\n\t    : undefined;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\t\n\t  /** Detect `this` as the global object. */\n\t  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal ||\n\t    ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\n\t      freeSelf || thisGlobal || Function('return this')();\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {...*} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    var length = args.length;\n\t    switch (length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * Creates a new array concatenating `array` with `other`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The first array to concatenate.\n\t   * @param {Array} other The second array to concatenate.\n\t   * @returns {Array} Returns the new concatenated array.\n\t   */\n\t  function arrayConcat(array, other) {\n\t    var index = -1,\n\t        length = array.length,\n\t        othIndex = -1,\n\t        othLength = other.length,\n\t        result = Array(length + othLength);\n\t\n\t    while (++index < length) {\n\t      result[index] = array[index];\n\t    }\n\t    while (++othIndex < othLength) {\n\t      result[index++] = other[othIndex];\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array.length;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    return !!array.length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includesWith` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array.length,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array.length;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t   * `comparator` to determine the extremum value.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The iteratee invoked per iteration.\n\t   * @param {Function} comparator The comparator used to compare values.\n\t   * @returns {*} Returns the extremum value.\n\t   */\n\t  function baseExtremum(array, iteratee, comparator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          current = iteratee(value);\n\t\n\t      if (current != null && (computed === undefined\n\t            ? current === current\n\t            : comparator(current, computed)\n\t          )) {\n\t        var computed = current,\n\t            result = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.find` and `_.findKey`, without\n\t   * support for iteratee shorthands, which iterates over `collection` using\n\t   * `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @param {boolean} [retKey] Specify returning the key of the found element instead of the element itself.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFind(collection, predicate, eachFunc, retKey) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = retKey ? key : value;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define\n\t   * the sort order of `array` and replaces criteria objects with their\n\t   * corresponding values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` without support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the new array of key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing wrapper metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a global object.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n\t   */\n\t  function checkGlobal(value) {\n\t    return (value && value.Object === Object) ? value : null;\n\t  }\n\t\n\t  /**\n\t   * Compares values to sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare.\n\t   * @param {*} other The other value to compare.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function compareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsNull = value === null,\n\t          valIsUndef = value === undefined,\n\t          valIsReflexive = value === value;\n\t\n\t      var othIsNull = other === null,\n\t          othIsUndef = other === undefined,\n\t          othIsReflexive = other === other;\n\t\n\t      if ((value > other && !othIsNull) || !valIsReflexive ||\n\t          (valIsNull && !othIsUndef && othIsReflexive) ||\n\t          (valIsUndef && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if ((value < other && !valIsNull) || !othIsReflexive ||\n\t          (othIsNull && !valIsUndef && valIsReflexive) ||\n\t          (othIsUndef && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.orderBy` to compare multiple properties of a value to another\n\t   * and stable sort them.\n\t   *\n\t   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t   * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t   * of corresponding values.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        var order = orders[index];\n\t        return result * (order == 'desc' ? -1 : 1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        result++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a host object in IE < 9.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t   */\n\t  function isHostObject(value) {\n\t    // Many host objects are `Object` objects that can coerce to strings\n\t    // despite having improperly defined `toString` methods.\n\t    var result = false;\n\t    if (value != null && typeof value.toString != 'function') {\n\t      try {\n\t        result = !!(value + '');\n\t      } catch (e) {}\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a valid array-like index.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t   */\n\t  function isIndex(value, length) {\n\t    value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t    length = length == null ? MAX_SAFE_INTEGER : length;\n\t    return value > -1 && value % 1 == 0 && value < length;\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    if (!(string && reHasComplexSymbol.test(string))) {\n\t      return string.length;\n\t    }\n\t    var result = reComplexSymbol.lastIndex = 0;\n\t    while (reComplexSymbol.test(string)) {\n\t      result++;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return string.match(reComplexSymbol);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Use `context` to mock `Date#getTime` use in `_.now`.\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Built-in constructor references. */\n\t    var Date = context.Date,\n\t        Error = context.Error,\n\t        Math = context.Math,\n\t        RegExp = context.RegExp,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = context.Array.prototype,\n\t        objectProto = context.Object.prototype;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = context.Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objectToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Reflect = context.Reflect,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        clearTimeout = context.clearTimeout,\n\t        enumerate = Reflect ? Reflect.enumerate : undefined,\n\t        getPrototypeOf = Object.getPrototypeOf,\n\t        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n\t        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n\t        objectCreate = Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice;\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = Object.keys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReverse = arrayProto.reverse;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var Map = getNative(context, 'Map'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var mapCtorString = Map ? funcToString.call(Map) : '',\n\t        setCtorString = Set ? funcToString.call(Set) : '',\n\t        weakMapCtorString = WeakMap ? funcToString.call(WeakMap) : '';\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = Symbol ? symbolProto.valueOf : undefined,\n\t        symbolToString = Symbol ? symbolProto.toString : undefined;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chaining. Methods that operate on and return arrays, collections, and\n\t     * functions can be chained together. Methods that retrieve a single value or\n\t     * may return a primitive value will automatically end the chain sequence and\n\t     * return the unwrapped value. Otherwise, the value must be unwrapped with\n\t     * `_#value`.\n\t     *\n\t     * Explicit chaining, which must be unwrapped with `_#value` in all cases,\n\t     * may be enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization to merge iteratee calls; this avoids the creation\n\t     * of intermediate arrays and can greatly reduce the number of iteratee executions.\n\t     * Sections of a chain sequence qualify for shortcut fusion if the section is\n\t     * applied to an array of at least two hundred elements and any iteratees\n\t     * accept only one argument. The heuristic for whether a section qualifies\n\t     * for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`, `difference`,\n\t     * `differenceBy`, `differenceWith`, `drop`, `dropRight`, `dropRightWhile`,\n\t     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flattenDepth`,\n\t     * `flip`, `flow`, `flowRight`, `fromPairs`, `functions`, `functionsIn`,\n\t     * `groupBy`, `initial`, `intersection`, `intersectionBy`, `intersectionWith`,\n\t     * `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`, `keys`, `keysIn`,\n\t     * `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`, `memoize`,\n\t     * `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`, `nthArg`,\n\t     * `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`, `overEvery`,\n\t     * `overSome`, `partial`, `partialRight`, `partition`, `pick`, `pickBy`, `plant`,\n\t     * `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`, `pullAt`, `push`,\n\t     * `range`, `rangeRight`, `rearg`, `reject`, `remove`, `rest`, `reverse`,\n\t     * `sampleSize`, `set`, `setWith`, `shuffle`, `slice`, `sort`, `sortBy`,\n\t     * `splice`, `spread`, `tail`, `take`, `takeRight`, `takeRightWhile`,\n\t     * `takeWhile`, `tap`, `throttle`, `thru`, `toArray`, `toPairs`, `toPairsIn`,\n\t     * `toPath`, `toPlainObject`, `transform`, `unary`, `union`, `unionBy`,\n\t     * `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`, `unshift`, `unzip`,\n\t     * `unzipWith`, `values`, `valuesIn`, `without`, `wrap`, `xor`, `xorBy`,\n\t     * `xorWith`, `zip`, `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `endsWith`, `eq`,\n\t     * `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n\t     * `findLastIndex`, `findLastKey`, `floor`, `forEach`, `forEachRight`, `forIn`,\n\t     * `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`,\n\t     * `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`,\n\t     * `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n\t     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,\n\t     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,\n\t     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`,\n\t     * `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`, `isSafeInteger`,\n\t     * `isSet`, `isString`, `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`,\n\t     * `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`,\n\t     * `lt`, `lte`, `max`, `maxBy`, `mean`, `min`, `minBy`, `noConflict`, `noop`,\n\t     * `now`, `pad`, `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`,\n\t     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `sample`,\n\t     * `shift`, `size`, `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`,\n\t     * `sortedLastIndex`, `sortedLastIndexBy`, `startCase`, `startsWith`, `subtract`,\n\t     * `sum`, `sumBy`, `template`, `times`, `toLower`, `toInteger`, `toLength`,\n\t     * `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`, `trimEnd`,\n\t     * `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`, `upperFirst`,\n\t     * `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n\t          (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @returns {Object} Returns the new hash object.\n\t     */\n\t    function Hash() {}\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(hash, key) {\n\t      return hashHas(hash, key) && delete hash[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to query.\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(hash, key) {\n\t      if (nativeCreate) {\n\t        var result = hash[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to query.\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(hash, key) {\n\t      return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     */\n\t    function hashSet(hash, key, value) {\n\t      hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function MapCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = values[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapClear() {\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': Map ? new Map : [],\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapGet(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map.get(key) : assocGet(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map.has(key) : assocHas(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n\t      } else if (Map) {\n\t        data.map.set(key, value);\n\t      } else {\n\t        assocSet(data.map, key, value);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a set cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.push(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The set cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function cacheHas(cache, value) {\n\t      var map = cache.__data__;\n\t      if (isKeyable(value)) {\n\t        var data = map.__data__,\n\t            hash = typeof value == 'string' ? data.string : data.hash;\n\t\n\t        return hash[value] === HASH_UNDEFINED;\n\t      }\n\t      return map.has(value);\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the set cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var map = this.__data__;\n\t      if (isKeyable(value)) {\n\t        var data = map.__data__,\n\t            hash = typeof value == 'string' ? data.string : data.hash;\n\t\n\t        hash[value] = HASH_UNDEFINED;\n\t      }\n\t      else {\n\t        map.set(value, HASH_UNDEFINED);\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function Stack(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = values[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = { 'array': [], 'map': null };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocDelete(array, key) : data.map['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocGet(array, key) : data.map.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocHas(array, key) : data.map.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache object.\n\t     */\n\t    function stackSet(key, value) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      if (array) {\n\t        if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n\t          assocSet(array, key, value);\n\t        } else {\n\t          data.array = null;\n\t          data.map = new MapCache(array);\n\t        }\n\t      }\n\t      var map = data.map;\n\t      if (map) {\n\t        map.set(key, value);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Removes `key` and its value from the associative array.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function assocDelete(array, key) {\n\t      var index = assocIndexOf(array, key);\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = array.length - 1;\n\t      if (index == lastIndex) {\n\t        array.pop();\n\t      } else {\n\t        splice.call(array, index, 1);\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the associative array value for `key`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function assocGet(array, key) {\n\t      var index = assocIndexOf(array, key);\n\t      return index < 0 ? undefined : array[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if an associative array value for `key` exists.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function assocHas(array, key) {\n\t      return assocIndexOf(array, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `key` is found in `array`\n\t     * of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to search.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the associative array `key` to `value`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     */\n\t    function assocSet(array, key, value) {\n\t      var index = assocIndexOf(array, key);\n\t      if (index < 0) {\n\t        array.push([key, value]);\n\t      } else {\n\t        array[index][1] = value;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (typeof key == 'number' && value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          isNil = object == null,\n\t          length = paths.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = isNil ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the array-like object.\n\t     */\n\t    function baseCastArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the array-like object.\n\t     */\n\t    function baseCastFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function baseCastPath(value) {\n\t      return isArray(value) ? value : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stack) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          if (isHostObject(value)) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        assignValue(result, key, baseClone(subValue, isDeep, customizer, key, value, stack));\n\t      });\n\t      return isArr ? result : copySymbols(value, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source),\n\t          length = props.length;\n\t\n\t      return function(object) {\n\t        if (object == null) {\n\t          return !length;\n\t        }\n\t        var index = length;\n\t        while (index--) {\n\t          var key = props[index],\n\t              predicate = source[key],\n\t              value = object[key];\n\t\n\t          if ((value === undefined && !(key in Object(object))) || !predicate(value)) {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseCreate(proto) {\n\t      return isObject(proto) ? objectCreate(proto) : {};\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an array\n\t     * of `func` arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments to provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support for\n\t     * excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, isStrict, result) {\n\t      result || (result = []);\n\t\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && isArrayLikeObject(value) &&\n\t            (isStrict || isArray(value) || isArguments(value))) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return object == null ? object : baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[path[index++]];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n\t      // that are composed entirely of index properties, return `false` for\n\t      // `hasOwnProperty` checks of them.\n\t      return hasOwnProperty.call(object, key) ||\n\t        (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        caches[othIndex] = !comparator && (iteratee || array.length >= 120)\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          length = array.length,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          var othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      if (!isKey(path, object)) {\n\t        path = baseCastPath(path);\n\t        object = parent(object, path);\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {boolean} [bitmask] The bitmask of comparison flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - Unordered comparison\n\t     *     2 - Partial comparison\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, bitmask, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag && !isHostObject(object),\n\t          othIsObj = othTag == objectTag && !isHostObject(other),\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag, equalFunc, customizer, bitmask);\n\t      }\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t      if (!isPartial) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack,\n\t              result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\t\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      var type = typeof value;\n\t      if (type == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      return nativeKeys(Object(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      object = object == null ? object : Object(object);\n\t\n\t      var result = [];\n\t      for (var key in object) {\n\t        result.push(key);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Fallback for IE < 9 with es6-shim.\n\t    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n\t      baseKeysIn = function(object) {\n\t        return iteratorToArray(enumerate(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        var key = matchData[0][0],\n\t            value = matchData[0][1];\n\t\n\t        return function(object) {\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          return object[key] === value &&\n\t            (value !== undefined || (key in Object(object)));\n\t        };\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      var props = (isArray(source) || isTypedArray(source))\n\t        ? undefined\n\t        : keysIn(source);\n\t\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        newValue = srcValue;\n\t        if (isArray(srcValue) || isTypedArray(srcValue)) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = objValue;\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      stack.set(srcValue, newValue);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1,\n\t          toIteratee = getIteratee();\n\t\n\t      iteratees = arrayMap(iteratees.length ? iteratees : Array(1), function(iteratee) {\n\t        return toIteratee(iteratee);\n\t      });\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property names.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, props) {\n\t      object = Object(object);\n\t      return arrayReduce(props, function(result, key) {\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t        return result;\n\t      }, {});\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key) {\n\t        if (predicate(value, key)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAll`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values) {\n\t      return basePullAllBy(array, values);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAllBy(array, values, iteratee) {\n\t      var index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (iteratee) {\n\t        seen = arrayMap(array, function(value) { return iteratee(value); });\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = baseIndexOf(seen, computed, fromIndex)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (lastIndex == length || index != previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          }\n\t          else if (!isKey(index, array)) {\n\t            var path = baseCastPath(index),\n\t                object = parent(array, path);\n\t\n\t            if (object != null) {\n\t              delete object[last(path)];\n\t            }\n\t          }\n\t          else {\n\t            delete array[index];\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          var newValue = value;\n\t          if (index != lastIndex) {\n\t            var objValue = nested[key];\n\t            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t            if (newValue === undefined) {\n\t              newValue = objValue == null\n\t                ? (isIndex(path[index + 1]) ? [] : {})\n\t                : objValue;\n\t            }\n\t          }\n\t          assignValue(nested, key, newValue);\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isDef = computed !== undefined,\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t          setLow = isReflexive && isDef && (retHighest || computed != null);\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || isDef);\n\t        } else if (computed == null) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array) {\n\t      return baseSortedUniqBy(array);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniqBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniqBy(array, iteratee) {\n\t      var index = 0,\n\t          length = array.length,\n\t          value = array[0],\n\t          computed = iteratee ? iteratee(value) : value,\n\t          seen = computed,\n\t          resIndex = 0,\n\t          result = [value];\n\t\n\t      while (++index < length) {\n\t        value = array[index],\n\t        computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!eq(computed, seen)) {\n\t          seen = computed;\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n\t      object = parent(object, path);\n\t      var key = last(path);\n\t      return (object != null && has(object, key)) ? delete object[key] : true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var index = -1,\n\t          length = arrays.length;\n\t\n\t      while (++index < length) {\n\t        var result = result\n\t          ? arrayPush(\n\t              baseDifference(result, arrays[index], iteratee, comparator),\n\t              baseDifference(arrays[index], result, iteratee, comparator)\n\t            )\n\t          : arrays[index];\n\t      }\n\t      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property names.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        assignFunc(result, props[index], index < valsLength ? values[index] : undefined);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var Ctor = buffer.constructor,\n\t          result = new Ctor(buffer.length);\n\t\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var Ctor = arrayBuffer.constructor,\n\t          result = new Ctor(arrayBuffer.byteLength),\n\t          view = new Uint8Array(result);\n\t\n\t      view.set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map) {\n\t      var Ctor = map.constructor;\n\t      return arrayReduce(mapToArray(map), addMapEntry, new Ctor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var Ctor = regexp.constructor,\n\t          result = new Ctor(regexp.source, reFlags.exec(regexp));\n\t\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set) {\n\t      var Ctor = set.constructor;\n\t      return arrayReduce(setToArray(set), addSetEntry, new Ctor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return Symbol ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var arrayBuffer = typedArray.buffer,\n\t          buffer = isDeep ? cloneArrayBuffer(arrayBuffer) : arrayBuffer,\n\t          Ctor = typedArray.constructor;\n\t\n\t      return new Ctor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object) {\n\t      return copyObjectWith(source, props, object);\n\t    }\n\t\n\t    /**\n\t     * This function is like `copyObject` except that it accepts a function to\n\t     * customize copied values.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObjectWith(source, props, object, customizer) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : source[key];\n\t\n\t        assignValue(object, key, newValue);\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbol properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return rest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = typeof customizer == 'function'\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBaseWrapper(func, bitmask, thisArg) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = reHasComplexSymbol.test(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols ? strSymbols[0] : string.charAt(0),\n\t            trailing = strSymbols ? strSymbols.slice(1).join('') : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string)), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors.\n\t        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurryWrapper(func, bitmask, arity) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getPlaceholder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return rest(function(funcs) {\n\t        funcs = baseFlatten(funcs, 1);\n\t\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 &&\n\t              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getPlaceholder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new invoker function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return rest(function(iteratees) {\n\t        iteratees = arrayMap(baseFlatten(iteratees, 1), getIteratee());\n\t        return rest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      length = toInteger(length);\n\t\n\t      var strLength = stringSize(string);\n\t      if (!length || strLength >= length) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars === undefined ? ' ' : (chars + '');\n\t\n\t      var result = repeat(chars, nativeCeil(padLength / stringSize(chars)));\n\t      return reHasComplexSymbol.test(chars)\n\t        ? stringToArray(result).slice(0, padLength).join('')\n\t        : result.slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toNumber(start);\n\t        start = start === start ? start : 0;\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toNumber(end) || 0;\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & CURRY_FLAG,\n\t          newArgPos = argPos ? copyArray(argPos) : undefined,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, newArgPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = toInteger(precision);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == BIND_FLAG) {\n\t        var result = createBaseWrapper(func, bitmask, thisArg);\n\t      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n\t        result = createCurryWrapper(func, bitmask, arity);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartialWrapper(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} [stack] Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n\t      var index = -1,\n\t          isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(array, other);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (isUnordered) {\n\t          if (!arraySome(other, function(othValue) {\n\t                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, equalFunc, customizer, bitmask) {\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object) ? other != +other : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          return (isPartial || object.size == other.size) &&\n\t            equalFunc(convert(object), convert(other), customizer, bitmask | UNORDERED_COMPARE_FLAG);\n\t\n\t        case symbolTag:\n\t          return !!Symbol && (symbolValueOf.call(object) == symbolValueOf.call(other));\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : baseHas(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If the `_.iteratee` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * `baseIteratee`. If arguments are provided the chosen function is invoked\n\t     * with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = toPairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object == null ? undefined : object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getPlaceholder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own symbol properties of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = getOwnPropertySymbols || function() {\n\t      return [];\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function getTag(value) {\n\t      return objectToString.call(value);\n\t    }\n\t\n\t    // Fallback for IE 11 providing `toStringTag` values for maps, sets, and weakmaps.\n\t    if ((Map && getTag(new Map) != mapTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = objectToString.call(value),\n\t            Ctor = result == objectTag ? value.constructor : null,\n\t            ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case mapCtorString: return mapTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasFunc(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = baseCastPath(path);\n\t        object = parent(object, path);\n\t        if (object != null) {\n\t          path = last(path);\n\t          result = hasFunc(object, path);\n\t        }\n\t      }\n\t      var length = object ? object.length : undefined;\n\t      return result || (\n\t        !!length && isLength(length) && isIndex(path, length) &&\n\t        (isArray(object) || isString(object) || isArguments(object))\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (isFunction(object.constructor) && !isPrototype(object))\n\t        ? baseCreate(getPrototypeOf(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates an array of index keys for `object` values of arrays,\n\t     * `arguments` objects, and strings, otherwise `null` is returned.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array|null} Returns index keys, else `null`.\n\t     */\n\t    function indexKeys(object) {\n\t      var length = object ? object.length : undefined;\n\t      if (isLength(length) &&\n\t          (isArray(object) || isString(object) || isArguments(object))) {\n\t        return baseTimes(length, String);\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t          ? (isArrayLike(object) && isIndex(index, object.length))\n\t          : (type == 'string' && index in object)) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (typeof value == 'number') {\n\t        return true;\n\t      }\n\t      return !isArray(value) &&\n\t        (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t          (object != null && value in Object(object)));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return type == 'number' || type == 'boolean' ||\n\t        (type == 'string' && value != '__proto__') || value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (isFunction(Ctor) && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * modify function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * combined case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : copyArray(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : copyArray(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : copyArray(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : copyArray(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = copyArray(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        stack.set(srcValue, objValue);\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function stringToPath(string) {\n\t      var result = [];\n\t      toString(string).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=0] The length of each chunk.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size) {\n\t      size = nativeMax(toInteger(size), 0);\n\t\n\t      var length = array ? array.length : 0;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = -1,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    var concat = rest(function(array, values) {\n\t      if (!isArray(array)) {\n\t        array = array == null ? [] : [Object(array)];\n\t      }\n\t      values = baseFlatten(values, 1);\n\t      return arrayConcat(array, values);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other\n\t     * given arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([3, 2, 1], [4, 2]);\n\t     * // => [3, 1]\n\t     */\n\t    var difference = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);\n\t     * // => [3.1, 1.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = rest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, true), getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. The comparator\n\t     * is invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = rest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseFindIndex(array, getIteratee(predicate, 3))\n\t        : -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseFindIndex(array, getIteratee(predicate, 3), true)\n\t        : -1;\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs ? pairs.length : 0,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the offset\n\t     * from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      fromIndex = toInteger(fromIndex);\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return baseIndexOf(array, value, fromIndex);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [4, 2], [1, 2]);\n\t     * // => [2]\n\t     */\n\t    var intersection = rest(function(arrays) {\n\t      var mapped = arrayMap(arrays, baseCastArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, baseCastArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = rest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, baseCastArrayLikeObject);\n\t\n\t      if (comparator === last(mapped)) {\n\t        comparator = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array ? nativeJoin.call(array, separator) : '';\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = (index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)) + 1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    var pull = rest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pullAll(array, [2, 3]);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAllBy(array, values, getIteratee(iteratee))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = rest(function(array, indexes) {\n\t      indexes = arrayMap(baseFlatten(indexes, 1), String);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(compareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array ? nativeReverse.call(array) : array;\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of [`Array#slice`](https://mdn.io/Array/slice)\n\t     * to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 5], 4);\n\t     * // => 0\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };\n\t     *\n\t     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([1, 1, 2, 2], 2);\n\t     * // => 2\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5], 4);\n\t     * // => 1\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([1, 1, 2, 2], 2);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniqBy(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2, 1], [4, 2], [1, 2]);\n\t     * // => [2, 1, 4]\n\t     */\n\t    var union = rest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [2.1, 1.2, 4.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, true), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each element\n\t     * is kept.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length)\n\t        ? baseUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, undefined, comparator)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    var xor = rest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [1.2, 4.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = rest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property names and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = rest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method chaining enabled.\n\t     * The result of such method chaining must be unwrapped with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n\t     *  specified individually or in arrays.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     *\n\t     * _(['a', 'b', 'c']).at(0, 2).value();\n\t     * // => ['a', 'c']\n\t     */\n\t    var wrapperAt = rest(function(paths) {\n\t      paths = baseFlatten(paths, 1);\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.flatMap`.\n\t     *\n\t     * @name flatMap\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _([1, 2]).flatMap(duplicate).value();\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function wrapperFlatMap(iteratee) {\n\t      return this.map(iteratee).flatten();\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    function find(collection, predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      if (isArray(collection)) {\n\t        var index = baseFindIndex(collection, predicate);\n\t        return index > -1 ? collection[index] : undefined;\n\t      }\n\t      return baseFind(collection, predicate, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    function findLast(collection, predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      if (isArray(collection)) {\n\t        var index = baseFindIndex(collection, predicate, true);\n\t        return index > -1 ? collection[index] : undefined;\n\t      }\n\t      return baseFind(collection, predicate, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of flattened values by running each element in `collection`\n\t     * through `iteratee` and concating its result to the other mapped values.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior use `_.forIn` or `_.forOwn`\n\t     * for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => logs `1` then `2`\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      return (typeof iteratee == 'function' && isArray(collection))\n\t        ? arrayEach(collection, iteratee)\n\t        : baseEach(collection, baseCastFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => logs `2` then `1`\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      return (typeof iteratee == 'function' && isArray(collection))\n\t        ? arrayEachRight(collection, iteratee)\n\t        : baseEachRight(collection, baseCastFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of elements responsible for generating the key.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string it's checked\n\t     * for a substring of `value`, otherwise [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it's\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = rest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `curry`, `curryRight`, `drop`, `dropRight`, `every`, `fill`,\n\t     * `invert`, `parseInt`, `random`, `range`, `rangeRight`, `slice`, `some`,\n\t     * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimEnd`, `trimStart`,\n\t     * and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} [iteratees=[_.identity]] The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getIteratee(predicate, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var array = isArrayLike(collection) ? collection : values(collection),\n\t          length = array.length;\n\t\n\t      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=0] The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n) {\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      n = baseClamp(toInteger(n), 0, length);\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sampleSize(collection, MAX_ARRAY_LENGTH);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        var result = collection.length;\n\t        return (result && isString(collection)) ? stringSize(collection) : result;\n\t      }\n\t      return keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by, specified individually or in arrays.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, function(o) { return o.user; });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.sortBy(users, 'user', function(o) {\n\t     *   return Math.floor(o.age / 10);\n\t     * });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortBy = rest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Function}\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = Date.now;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = rest(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getPlaceholder(bind));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = rest(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getPlaceholder(bindKey));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide an options object to indicate whether `func` should be invoked on\n\t     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent calls\n\t     * to the debounced function return the result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          leading = false,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(toNumber(options.maxWait) || 0, wait);\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        lastCalled = 0;\n\t        args = maxTimeoutId = thisArg = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function complete(isCalled, id) {\n\t        if (id) {\n\t          clearTimeout(id);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (isCalled) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = undefined;\n\t          }\n\t        }\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          complete(trailingCall, maxTimeoutId);\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function flush() {\n\t        if ((timeoutId && trailingCall) || (maxTimeoutId && trailing)) {\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        cancel();\n\t        return result;\n\t      }\n\t\n\t      function maxDelayed() {\n\t        complete(trailing, timeoutId);\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!lastCalled && !maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled);\n\t\n\t          var isCalled = (remaining <= 0 || remaining > maxWait) &&\n\t            (leading || maxTimeoutId);\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = undefined;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = rest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = rest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrapper(func, FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments transformed by\n\t     * corresponding `transforms`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms] The functions to transform\n\t     * arguments, specified individually or in arrays.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, square, doubled);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = rest(function(func, transforms) {\n\t      transforms = arrayMap(baseFlatten(transforms, 1), getIteratee());\n\t\n\t      var funcsLength = transforms.length;\n\t      return rest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getPlaceholder(partial));\n\t      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getPlaceholder(partialRight));\n\t      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified individually or in arrays.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = rest(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, array);\n\t          case 1: return func.call(this, args[0], array);\n\t          case 2: return func.call(this, args[0], args[1], array);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = array;\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return rest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = args.slice(0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide an options object to indicate whether\n\t     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return partial(wrapper, value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      return baseClone(value, false, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      return baseClone(value, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    function gt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    function gte(value, other) {\n\t      return value >= other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Function}\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    function isArrayBuffer(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null &&\n\t        !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && objectToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = !Buffer ? constant(false) : function(value) {\n\t      return value instanceof Buffer;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it's an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || isString(value) ||\n\t            isFunction(value.splice) || isArguments(value))) {\n\t        return !value.length;\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined` comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      return (objectToString.call(value) == errorTag) ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MAX_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(3.14);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 8 which returns 'object' for typed array constructors, and\n\t      // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t      var tag = isObject(value) ? objectToString.call(value) : '';\n\t      return tag == funcTag || tag == genTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return !!value && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    function isMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values. This method is\n\t     * equivalent to a `_.matches` function when `source` is partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined` comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (isFunction(value)) {\n\t        return reIsNative.test(funcToString.call(value));\n\t      }\n\t      return isObjectLike(value) &&\n\t        (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && objectToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) ||\n\t          objectToString.call(value) != objectTag || isHostObject(value)) {\n\t        return false;\n\t      }\n\t      var proto = getPrototypeOf(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = proto.constructor;\n\t      return (typeof Ctor == 'function' &&\n\t        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objectToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    function isSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    function lt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    function lte(value, other) {\n\t      return value <= other;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (iteratorSymbol && value[iteratorSymbol]) {\n\t        return iteratorToArray(value[iteratorSymbol]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      var remainder = value % 1;\n\t      return value === value ? (remainder ? value - remainder : value) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3);\n\t     * // => 3\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3');\n\t     * // => 3\n\t     */\n\t    function toNumber(value) {\n\t      if (isObject(value)) {\n\t        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string if it's not one. An empty string is returned\n\t     * for `null` and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return '';\n\t      }\n\t      if (isSymbol(value)) {\n\t        return Symbol ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source objects to the destination\n\t     * object. Source objects are applied from left to right. Subsequent sources\n\t     * overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.e = 5;\n\t     * }\n\t     *\n\t     * Foo.prototype.d = 4;\n\t     * Bar.prototype.f = 6;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3, 'e': 5 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      copyObject(source, keys(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.d = 4;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     * Bar.prototype.e = 5;\n\t     *\n\t     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      copyObject(source, keysIn(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer` which\n\t     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n\t     * assignment is handled by the method instead. The `customizer` is invoked\n\t     * with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObjectWith(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer` which\n\t     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n\t     * assignment is handled by the method instead. The `customizer` is invoked\n\t     * with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObjectWith(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n\t     *  specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     *\n\t     * _.at(['a', 'b', 'c'], 0, 2);\n\t     * // => ['a', 'c']\n\t     */\n\t    var at = rest(function(object, paths) {\n\t      return baseAt(object, baseFlatten(paths, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a `properties`\n\t     * object is given its own enumerable properties are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable properties of source objects to the\n\t     * destination object for all destination properties that resolve to `undefined`.\n\t     * Source objects are applied from left to right. Once a property is set,\n\t     * additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = rest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = rest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The iteratee is invoked with three arguments:\n\t     * (value, key, object). Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', then 'c' (iteration order is not guaranteed)\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, baseCastFunction(iteratee), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, baseCastFunction(iteratee), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The iteratee is invoked with three arguments:\n\t     * (value, key, object). Iteratee functions may exit iteration early by\n\t     * explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, baseCastFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, baseCastFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     * var other = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` through `iteratee`.\n\t     * The corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = rest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      var isProto = isPrototype(object);\n\t      if (!(isProto || isArrayLike(object))) {\n\t        return baseKeys(object);\n\t      }\n\t      var indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      for (var key in object) {\n\t        if (baseHas(object, key) &&\n\t            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(isProto && key == 'constructor')) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      var index = -1,\n\t          isProto = isPrototype(object),\n\t          props = baseKeysIn(object),\n\t          propsLength = props.length,\n\t          indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * property of `object` through `iteratee`. The iteratee is invoked with\n\t     * three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[iteratee(value, key, object)] = value;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee is invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Recursively merges own and inherited enumerable properties of source objects\n\t     * into the destination object. Source properties that resolve to `undefined`\n\t     * are skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined` merging is handled by the\n\t     * method instead. The `customizer` is invoked with seven arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property names to omit, specified\n\t     *  individually or in arrays.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = rest(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      props = arrayMap(baseFlatten(props, 1), String);\n\t      return basePick(object, baseDifference(keysIn(object), props));\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable properties of `object` that `predicate`\n\t     * doesn't return truthy for. The predicate is invoked with two arguments:\n\t     * (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      predicate = getIteratee(predicate);\n\t      return basePickBy(object, function(value, key) {\n\t        return !predicate(value, key);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property names to pick, specified\n\t     *  individually or in arrays.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = rest(function(object, props) {\n\t      return object == null ? {} : basePick(object, baseFlatten(props, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it's invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      if (!isKey(path, object)) {\n\t        path = baseCastPath(path);\n\t        var result = get(object, path);\n\t        object = parent(object, path);\n\t      } else {\n\t        result = object == null ? undefined : object[path];\n\t      }\n\t      if (result === undefined) {\n\t        result = defaultValue;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.setWith({ '0': { 'length': 2 } }, '[0][1][2]', 3, Object);\n\t     * // => { '0': { '1': { '2': 3 }, 'length': 2 } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable key-value pairs for `object` which\n\t     * can be consumed by `_.fromPairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    function toPairs(object) {\n\t      return baseToPairs(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable key-value pairs for\n\t     * `object` which can be consumed by `_.fromPairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 1]] (iteration order is not guaranteed)\n\t     */\n\t    function toPairsIn(object) {\n\t      return baseToPairs(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getIteratee(iteratee, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = isFunction(Ctor) ? baseCreate(getPrototypeOf(object)) : {};\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object ? baseValues(object, keys(object)) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toNumber(start) || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toNumber(end) || 0;\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are floats,\n\t     * a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toNumber(lower) || 0;\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toNumber(upper) || 0;\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = typeof target == 'string' ? target : (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in IE < 9, they can break out of\n\t     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = stringSize(string);\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = nativeFloor(mid),\n\t          rightLength = nativeCeil(mid);\n\t\n\t      return createPadding('', leftLength, chars) + string + createPadding('', rightLength, chars);\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      return string + createPadding(string, length, chars);\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      return createPadding(string, length, chars) + string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#x15.1.2.2)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = toString(string).replace(reTrim, '');\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      string = toString(string);\n\t      n = toInteger(n);\n\t\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : string.replace(args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the new array of string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      return toString(string).split(separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + capitalize(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar');\n\t     * // => '--foo-bar'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar');\n\t     * // => '--FOO-BAR'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars);\n\t\n\t      return strSymbols\n\t        .slice(charsStartIndex(strSymbols, chrSymbols), charsEndIndex(strSymbols, chrSymbols) + 1)\n\t        .join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string);\n\t      return strSymbols\n\t        .slice(0, charsEndIndex(strSymbols, stringToArray(chars)) + 1)\n\t        .join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string);\n\t      return strSymbols\n\t        .slice(charsStartIndex(strSymbols, stringToArray(chars)))\n\t        .join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options=({})] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? toString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (reHasComplexSymbol.test(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? strSymbols.slice(0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = rest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind,\n\t     *  specified individually or in arrays.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, 'onClick');\n\t     * jQuery(element).on('click', view.onClick);\n\t     * // => logs 'clicked docs' when clicked\n\t     */\n\t    var bindAll = rest(function(object, methodNames) {\n\t      arrayEach(baseFlatten(methodNames, 1), function(key) {\n\t        object[key] = bind(object[key], object);\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` invoking the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.constant(true),                _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs ? pairs.length : 0,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return rest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument given to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name the created callback returns the\n\t     * property value for a given element. If `func` is an object the created\n\t     * callback returns `true` for elements that contain the equivalent object\n\t     * properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(callback, func) {\n\t     *   var p = /^(\\S+)\\s*([<>])\\s*(\\S+)$/.exec(func);\n\t     *   return !p ? callback(func) : function(object) {\n\t     *     return (p[2] == '>' ? object[p[1]] > p[3] : object[p[1]] < p[3]);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age > 36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`. The created function is equivalent to\n\t     * `_.isMatch` with a `source` partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invokeMap(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = rest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = rest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = (isObject(options) && 'chain' in options) ? options.chain : true,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns its nth argument.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     *\n\t     * func('a', 'b', 'c');\n\t     * // => 'b'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return function() {\n\t        return arguments[n];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments provided\n\t     * to the created function and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} iteratees The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over(Math.max, Math.min);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments provided to the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} predicates The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery(Boolean, isFinite);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments provided to the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} predicates The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome(Boolean, isFinite);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(true));\n\t     * // => [true, true, true, true]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = baseCastFunction(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     *\n\t     * var path = ['a', 'b', 'c'],\n\t     *     newPath = _.toPath(path);\n\t     *\n\t     * console.log(newPath);\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * console.log(path === newPath);\n\t     * // => false\n\t     */\n\t    function toPath(value) {\n\t      return isArray(value) ? arrayMap(value, String) : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      var result;\n\t      if (augend === undefined && addend === undefined) {\n\t        return 0;\n\t      }\n\t      if (augend !== undefined) {\n\t        result = augend;\n\t      }\n\t      if (addend !== undefined) {\n\t        result = result === undefined ? addend : (result + addend);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, gt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), gt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return sum(array) / (array ? array.length : 0);\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, lt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), lt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    function subtract(minuend, subtrahend) {\n\t      var result;\n\t      if (minuend === undefined && subtrahend === undefined) {\n\t        return 0;\n\t      }\n\t      if (minuend !== undefined) {\n\t        result = minuend;\n\t      }\n\t      if (subtrahend !== undefined) {\n\t        result = result === undefined ? subtrahend : (result - subtrahend);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Avoid inheriting from `Object.prototype` when possible.\n\t    Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\t\n\t    // Add functions to the `MapCache`.\n\t    MapCache.prototype.clear = mapClear;\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `SetCache`.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Add functions to the `Stack` cache.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.flatMap = wrapperFlatMap;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    if (iteratorSymbol) {\n\t      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Expose lodash on the free variable `window` or `self` when available. This\n\t  // prevents errors in cases where lodash is loaded by a script tag in the presence\n\t  // of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t  (freeWindow || freeSelf || {})._ = _;\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module), (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.dataUrl = undefined;\n\texports.testdrive = testdrive;\n\texports.activate = activate;\n\texports.doCrossfilter = doCrossfilter;\n\texports.responseHandler = responseHandler;\n\texports.setupUI = setupUI;\n\t\n\tvar _crossfilter = __webpack_require__(1);\n\t\n\tvar _crossfilter2 = _interopRequireDefault(_crossfilter);\n\t\n\tvar _d = __webpack_require__(3);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tvar _lodash = __webpack_require__(4);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar keys = [];\n\t\n\tfunction testdrive() {\n\t    console.log(\"Hello there!\");\n\t}\n\t\n\tvar dataUrl = exports.dataUrl = \"./data/11.json\";\n\t//export const dataUrl = \"https://raw.githubusercontent.com/dbautistav/datahub/gh-pages/ecobici/2015/11.json\";\n\t\n\tfunction activate() {\n\t    // TODO: get & use catalog.\n\t    //  https://raw.githubusercontent.com/dbautistav/datahub/gh-pages/catalog.json\n\t    _d2.default.csv(dataUrl, responseHandler);\n\t}\n\t\n\t/**\n\t * Toolkit: dimensions, group, filters\n\t * ===================================\n\t *\n\t * Example output:\n\t *\n\t *   keys 9 [\"Bici\", \"Ciclo_Estacion_Arribo\", \"Ciclo_Estacion_Retiro\",\n\t *              \"Edad_Usuario\", \"Fecha_Arribo\", \"Fecha_Retiro\", \"Genero_Usuario\",\n\t *              \"Hora_Arribo\", \"Hora_Retiro\"]\n\t *\n\t *   filterExact(\"0331\")\n\t *   43. F\n\t *   32. M\n\t *   18. M\n\t *   72. M\n\t *   43. F\n\t *   34. M\n\t *   32. M\n\t *   21. M\n\t *   30. F\n\t *   25. M\n\t *   36. M\n\t *   30. M\n\t *   23. M\n\t *   42. M\n\t *   29. M\n\t *   47. M\n\t *   55. M\n\t *   33. F\n\t *\n\t *   byGenderGroup\n\t *   M: 14\n\t *   F: 4\n\t *\n\t *   Total # of users: 795614\n\t *   # of users between 23 yo and 25 yo (both included): 53268\n\t *\n\t */\n\tfunction doCrossfilter(dataset) {\n\t    //// [795614]:\n\t    ////  {\n\t    ////    Bici: \"3415\",\n\t    ////    Ciclo_Estacion_Arribo: \"132\",\n\t    ////    Ciclo_Estacion_Retiro: \"129\",\n\t    ////    Edad_Usuario: \"29\",\n\t    ////    Fecha_Arribo: \"2015-11-01\",\n\t    ////    Fecha_Retiro: \"2015-11-01\",\n\t    ////    Genero_Usuario: \"M\",\n\t    ////    Hora_Arribo: \"00:04:24\",\n\t    ////    Hora_Retiro: \"00:00:01.623000\"\n\t    ////  }\n\t\n\t    var observations = (0, _crossfilter2.default)(dataset);\n\t    //console.log(\"observations\", observations);\n\t\n\t    // ~~~~\n\t    //$(\"#container\")\n\t    //    .html(\n\t    //        \"<h2>Items loaded: \" + observations.size() + \"</h2>\" +\n\t    //        \"<p>Check the dev-tools console.</p>\"\n\t    //    );\n\t\n\t    var byBike = observations.dimension(function (o) {\n\t        return o.Bici;\n\t    });\n\t\n\t    var byBikeGroup = byBike.group();\n\t    console.log(\"byBikeGroup\", byBikeGroup.size());\n\t\n\t    //// Prints every 'Bici' id and number of occurrences:\n\t    //byBikeGroup.top(Infinity).forEach(function (o, i) {\n\t    ////    key: set by dimension definition (observation attribute); value: count of 'key' occurrences\n\t    //    console.log(o.key + \": \" + o.value);\n\t    //});\n\t\n\t    byBike.filter(\"0331\"); // also: byBike.filterExact(\"0331\");\n\t    console.log('filterExact(\"0331\")    |    (Edad. Genero)');\n\t    byBike.top(Infinity).forEach(function (o, i) {\n\t        console.log(o.Edad_Usuario + \". \" + o.Genero_Usuario);\n\t    });\n\t\n\t    // ~~~~\n\t    var byGender = observations.dimension(function (o) {\n\t        return o.Genero_Usuario;\n\t    });\n\t\n\t    var byGenderGroup = byGender.group();\n\t    console.log(\"byGenderGroup\", byGenderGroup.size());\n\t    byGenderGroup.top(Infinity).forEach(function (o, i) {\n\t        ////    key: set by dimension definition (observation attribute); value: count of 'key' occurrences\n\t        console.log(o.key + \": \" + o.value);\n\t    });\n\t    //// console.log(\"observations.groupAll().reduceCount().value()\", observations.groupAll().reduceCount().value());\n\t    var filtered = byGender.top(Infinity).map(function (o, i) {\n\t        return o;\n\t    });\n\t    console.log(filtered);\n\t\n\t    // Resets previous filters:\n\t    byBike.filter(null); // also: byBike.filterAll();\n\t\n\t    var byAge = observations.dimension(function (o) {\n\t        return parseInt(o.Edad_Usuario);\n\t    });\n\t    console.log(\"Total # of users (dimension-top): \" + byAge.top(Infinity).length);\n\t    console.log(\"Total # of users (crossfilter-size): \" + observations.size());\n\t\n\t    var t0 = 23,\n\t        tf = 25;\n\t    byAge.filter([t0, tf]);\n\t    console.log(\"# of users between \" + t0 + \" yo and \" + tf + \" yo (both included): \" + byAge.top(Infinity).length);\n\t\n\t    //// Prints every 'Bici' id and number of occurrences (affected by previous 'byAge.filter'):\n\t    //byBikeGroup.top(Infinity).forEach(function (o, i) {\n\t    ////    key: set by dimension definition (observation attribute); value: count of 'key' occurrences\n\t    //    console.log(o.key + \": \" + o.value);\n\t    //});\n\t\n\t    // ~~~~\n\t    t0 = 20;\n\t    tf = 21;\n\t    byAge.filter([t0, tf]);\n\t\n\t    console.log(\"# of users between \" + t0 + \" yo and \" + tf + \" yo (both included): \" + byAge.top(Infinity).length);\n\t\n\t    // By default, the group's reduce function will count the number of records per group.\n\t    // In addition, the groups will be ordered by count.\n\t    // [...] a grouping intersects the crossfilter's current filters,\n\t    //  except for the associated dimension's filter.\n\t    //  Thus, group methods consider only records that satisfy every filter except this dimension's filter.\n\t    byGenderGroup.top(Infinity).forEach(function (o, i) {\n\t        ////    key: set by dimension definition (observation attribute); value: count of 'key' occurrences\n\t        console.log(o.key + \": \" + o.value);\n\t    });\n\t\n\t    byAge.filter(null);\n\t    var byAgeGroup = byAge.group();\n\t    console.log(\"byAgeGroup\", byAgeGroup.size(), byAge.bottom(1)[0].Edad_Usuario, byAge.top(1)[0].Edad_Usuario);\n\t\n\t    //byBikeGroup.top(Infinity).forEach(function (o, i) {\n\t    ////    key: set by dimension definition (observation attribute); value: count of 'key' occurrences\n\t    //    console.log(o.key + \": \" + o.value);\n\t    //});\n\t    //byAge.top(Infinity).forEach(function (o, i) {\n\t    ////    key: set by dimension definition (observation attribute); value: count of 'key' occurrences\n\t    //    console.log(o.key + \": \" + o.value);\n\t    //});\n\t\n\t    // This frees up space.\n\t    //  (groups and dimensions)\n\t    byGenderGroup.dispose();\n\t    byGender.dispose();\n\t    byBikeGroup.dispose();\n\t    byBike.dispose();\n\t    byAgeGroup.dispose();\n\t    byAge.dispose();\n\t}\n\t\n\tfunction responseHandler(response) {\n\t    setupUI(response, doCrossfilter);\n\t}\n\t\n\tfunction setupUI(dataset, cb) {\n\t    ////  {\n\t    ////    Bici: \"3415\",\n\t    ////    Ciclo_Estacion_Arribo: \"132\",\n\t    ////    Ciclo_Estacion_Retiro: \"129\",\n\t    ////    Edad_Usuario: \"29\",\n\t    ////    Fecha_Arribo: \"2015-11-01\",\n\t    ////    Fecha_Retiro: \"2015-11-01\",\n\t    ////    Genero_Usuario: \"M\",\n\t    ////    Hora_Arribo: \"00:04:24\",\n\t    ////    Hora_Retiro: \"00:00:01.623000\"\n\t    ////  }\n\t\n\t    if (dataset.length > 0) {\n\t        keys = _lodash2.default.orderBy(_lodash2.default.keysIn(dataset[0]), _lodash2.default.identity, [\"asc\"]);\n\t        console.log(\"keys\", keys.length, keys);\n\t\n\t        // TODO: finish this!\n\t        // TODO: finish this!\n\t        //$(\"#container\")\n\t        // .html(\"<h2>Items loaded: \" + observations.size() + \"</h2><p>Check the dev-tools console.</p>\");\n\t\n\t        // Execute callback after setting up UI elements\n\t        cb(dataset);\n\t    } else {\n\t        //$(\"#container\")\n\t        //    .html(\"<h3>Error!  D:</h3><p>Check the dev-tools console.</p>\");\n\t    }\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 439735e939b2075ae32b\n **/","\"use strict\";\n\nimport crossfilter from \"crossfilter\";\nimport d3 from \"d3\";\nimport _ from \"lodash\";\n\nimport { activate, testdrive } from \"./script\";\n\n{\n    console.log(\"TestDrive up and running!\");\n    testdrive();\n\n    _.forEach([0, 2, 4, 6, 8], (item) => {\n        console.log(item);\n    });\n\n    activate();\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./main.js\n **/","module.exports = require(\"./crossfilter\").crossfilter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/crossfilter/index.js\n ** module id = 1\n ** module chunks = 0\n **/","(function(exports){\ncrossfilter.version = \"1.3.12\";\nfunction crossfilter_identity(d) {\n  return d;\n}\ncrossfilter.permute = permute;\n\nfunction permute(array, index) {\n  for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {\n    copy[i] = array[index[i]];\n  }\n  return copy;\n}\nvar bisect = crossfilter.bisect = bisect_by(crossfilter_identity);\n\nbisect.by = bisect_by;\n\nfunction bisect_by(f) {\n\n  // Locate the insertion point for x in a to maintain sorted order. The\n  // arguments lo and hi may be used to specify a subset of the array which\n  // should be considered; by default the entire array is used. If x is already\n  // present in a, the insertion point will be before (to the left of) any\n  // existing entries. The return value is suitable for use as the first\n  // argument to `array.splice` assuming that a is already sorted.\n  //\n  // The returned insertion point i partitions the array a into two halves so\n  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n  // a[i:hi] for the right side.\n  function bisectLeft(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (f(a[mid]) < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  // Similar to bisectLeft, but returns an insertion point which comes after (to\n  // the right of) any existing entries of x in a.\n  //\n  // The returned insertion point i partitions the array into two halves so that\n  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n  // a[i:hi] for the right side.\n  function bisectRight(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (x < f(a[mid])) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  bisectRight.right = bisectRight;\n  bisectRight.left = bisectLeft;\n  return bisectRight;\n}\nvar heap = crossfilter.heap = heap_by(crossfilter_identity);\n\nheap.by = heap_by;\n\nfunction heap_by(f) {\n\n  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n  // property such that the parent a[lo+i] is always less than or equal to its\n  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n  function heap(a, lo, hi) {\n    var n = hi - lo,\n        i = (n >>> 1) + 1;\n    while (--i > 0) sift(a, i, n, lo);\n    return a;\n  }\n\n  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n  // already a heap.\n  function sort(a, lo, hi) {\n    var n = hi - lo,\n        t;\n    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n    return a;\n  }\n\n  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n  // incrementally, without incurring the full cost of reconstructing the heap.\n  function sift(a, i, n, lo) {\n    var d = a[--lo + i],\n        x = f(d),\n        child;\n    while ((child = i << 1) <= n) {\n      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n      if (x <= f(a[lo + child])) break;\n      a[lo + i] = a[lo + child];\n      i = child;\n    }\n    a[lo + i] = d;\n  }\n\n  heap.sort = sort;\n  return heap;\n}\nvar heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);\n\nheapselect.by = heapselect_by;\n\nfunction heapselect_by(f) {\n  var heap = heap_by(f);\n\n  // Returns a new array containing the top k elements in the array a[lo:hi].\n  // The returned array is not sorted, but maintains the heap property. If k is\n  // greater than hi - lo, then fewer than k elements will be returned. The\n  // order of elements in a is unchanged by this operation.\n  function heapselect(a, lo, hi, k) {\n    var queue = new Array(k = Math.min(hi - lo, k)),\n        min,\n        i,\n        x,\n        d;\n\n    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n    heap(queue, 0, k);\n\n    if (lo < hi) {\n      min = f(queue[0]);\n      do {\n        if (x = f(d = a[lo]) > min) {\n          queue[0] = d;\n          min = f(heap(queue, 0, k)[0]);\n        }\n      } while (++lo < hi);\n    }\n\n    return queue;\n  }\n\n  return heapselect;\n}\nvar insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);\n\ninsertionsort.by = insertionsort_by;\n\nfunction insertionsort_by(f) {\n\n  function insertionsort(a, lo, hi) {\n    for (var i = lo + 1; i < hi; ++i) {\n      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n        a[j] = a[j - 1];\n      }\n      a[j] = t;\n    }\n    return a;\n  }\n\n  return insertionsort;\n}\n// Algorithm designed by Vladimir Yaroslavskiy.\n// Implementation based on the Dart project; see lib/dart/LICENSE for details.\n\nvar quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);\n\nquicksort.by = quicksort_by;\n\nfunction quicksort_by(f) {\n  var insertionsort = insertionsort_by(f);\n\n  function sort(a, lo, hi) {\n    return (hi - lo < quicksort_sizeThreshold\n        ? insertionsort\n        : quicksort)(a, lo, hi);\n  }\n\n  function quicksort(a, lo, hi) {\n    // Compute the two pivots by looking at 5 elements.\n    var sixth = (hi - lo) / 6 | 0,\n        i1 = lo + sixth,\n        i5 = hi - 1 - sixth,\n        i3 = lo + hi - 1 >> 1,  // The midpoint.\n        i2 = i3 - sixth,\n        i4 = i3 + sixth;\n\n    var e1 = a[i1], x1 = f(e1),\n        e2 = a[i2], x2 = f(e2),\n        e3 = a[i3], x3 = f(e3),\n        e4 = a[i4], x4 = f(e4),\n        e5 = a[i5], x5 = f(e5);\n\n    var t;\n\n    // Sort the selected 5 elements using a sorting network.\n    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\n    var pivot1 = e2, pivotValue1 = x2,\n        pivot2 = e4, pivotValue2 = x4;\n\n    // e2 and e4 have been saved in the pivot variables. They will be written\n    // back, once the partitioning is finished.\n    a[i1] = e1;\n    a[i2] = a[lo];\n    a[i3] = e3;\n    a[i4] = a[hi - 1];\n    a[i5] = e5;\n\n    var less = lo + 1,   // First element in the middle partition.\n        great = hi - 2;  // Last element in the middle partition.\n\n    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n    // with natural order (such as for Date objects), we must do two compares.\n    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n    if (pivotsEqual) {\n\n      // Degenerated case where the partitioning becomes a dutch national flag\n      // problem.\n      //\n      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n      //  ^             ^          ^             ^            ^\n      // left         less         k           great         right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1) for x in ]left, less[ : x < pivot.\n      //   2) for x in [less, k[ : x == pivot.\n      //   3) for x in ]great, right[ : x > pivot.\n      for (var k = less; k <= great; ++k) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else if (xk > pivotValue1) {\n\n          // Find the first element <= pivot in the range [k - 1, great] and\n          // put [:ek:] there. We know that such an element must exist:\n          // When k == less, then el3 (which is equal to pivot) lies in the\n          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n          // Note that in the latter case invariant 2 will be violated for a\n          // short amount of time. The invariant will be restored when the\n          // pivots are put into their final positions.\n          while (true) {\n            var greatValue = f(a[great]);\n            if (greatValue > pivotValue1) {\n              great--;\n              // This is the only location in the while-loop where a new\n              // iteration is started.\n              continue;\n            } else if (greatValue < pivotValue1) {\n              // Triple exchange.\n              a[k] = a[less];\n              a[less++] = a[great];\n              a[great--] = ek;\n              break;\n            } else {\n              a[k] = a[great];\n              a[great--] = ek;\n              // Note: if great < k then we will exit the outer loop and fix\n              // invariant 2 (which we just violated).\n              break;\n            }\n          }\n        }\n      }\n    } else {\n\n      // We partition the list into three parts:\n      //  1. < pivot1\n      //  2. >= pivot1 && <= pivot2\n      //  3. > pivot2\n      //\n      // During the loop we have:\n      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n      //  ^            ^                        ^              ^             ^\n      // left         less                     k              great        right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1. for x in ]left, less[ : x < pivot1\n      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n      //   3. for x in ]great, right[ : x > pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else {\n          if (xk > pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue > pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] <= pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] >= pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // Move pivots into their final positions.\n    // We shrunk the list from both sides (a[left] and a[right] have\n    // meaningless values in them) and now we move elements from the first\n    // and third partition into these locations so that we can store the\n    // pivots.\n    a[lo] = a[less - 1];\n    a[less - 1] = pivot1;\n    a[hi - 1] = a[great + 1];\n    a[great + 1] = pivot2;\n\n    // The list is now partitioned into three partitions:\n    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n    //  ^            ^                        ^             ^\n    // left         less                     great        right\n\n    // Recursive descent. (Don't include the pivot values.)\n    sort(a, lo, less - 1);\n    sort(a, great + 2, hi);\n\n    if (pivotsEqual) {\n      // All elements in the second partition are equal to the pivot. No\n      // need to sort them.\n      return a;\n    }\n\n    // In theory it should be enough to call _doSort recursively on the second\n    // partition.\n    // The Android source however removes the pivot elements from the recursive\n    // call if the second partition is too large (more than 2/3 of the list).\n    if (less < i1 && great > i5) {\n      var lessValue, greatValue;\n      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\n      // Copy paste of the previous 3-way partitioning with adaptions.\n      //\n      // We partition the list into three parts:\n      //  1. == pivot1\n      //  2. > pivot1 && < pivot2\n      //  3. == pivot2\n      //\n      // During the loop we have:\n      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n      //              ^                      ^              ^\n      //            less                     k              great\n      //\n      // Invariants:\n      //   1. for x in [ *, less[ : x == pivot1\n      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n      //   3. for x in ]great, * ] : x == pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk <= pivotValue1 && xk >= pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          less++;\n        } else {\n          if (xk <= pivotValue2 && xk >= pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] < pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] == pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // The second partition has now been cleared of pivot elements and looks\n    // as follows:\n    // [  *  |  > pivot1 && < pivot2  | * ]\n    //        ^                      ^\n    //       less                  great\n    // Sort the second partition using recursive descent.\n\n    // The second partition looks as follows:\n    // [  *  |  >= pivot1 && <= pivot2  | * ]\n    //        ^                        ^\n    //       less                    great\n    // Simply sort it by recursive descent.\n\n    return sort(a, less, great + 1);\n  }\n\n  return sort;\n}\n\nvar quicksort_sizeThreshold = 32;\nvar crossfilter_array8 = crossfilter_arrayUntyped,\n    crossfilter_array16 = crossfilter_arrayUntyped,\n    crossfilter_array32 = crossfilter_arrayUntyped,\n    crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,\n    crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;\n\nif (typeof Uint8Array !== \"undefined\") {\n  crossfilter_array8 = function(n) { return new Uint8Array(n); };\n  crossfilter_array16 = function(n) { return new Uint16Array(n); };\n  crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\n  crossfilter_arrayLengthen = function(array, length) {\n    if (array.length >= length) return array;\n    var copy = new array.constructor(length);\n    copy.set(array);\n    return copy;\n  };\n\n  crossfilter_arrayWiden = function(array, width) {\n    var copy;\n    switch (width) {\n      case 16: copy = crossfilter_array16(array.length); break;\n      case 32: copy = crossfilter_array32(array.length); break;\n      default: throw new Error(\"invalid array width!\");\n    }\n    copy.set(array);\n    return copy;\n  };\n}\n\nfunction crossfilter_arrayUntyped(n) {\n  var array = new Array(n), i = -1;\n  while (++i < n) array[i] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayLengthenUntyped(array, length) {\n  var n = array.length;\n  while (n < length) array[n++] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayWidenUntyped(array, width) {\n  if (width > 32) throw new Error(\"invalid array width!\");\n  return array;\n}\nfunction crossfilter_filterExact(bisect, value) {\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n  };\n}\n\nfunction crossfilter_filterRange(bisect, range) {\n  var min = range[0],\n      max = range[1];\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n  };\n}\n\nfunction crossfilter_filterAll(values) {\n  return [0, values.length];\n}\nfunction crossfilter_null() {\n  return null;\n}\nfunction crossfilter_zero() {\n  return 0;\n}\nfunction crossfilter_reduceIncrement(p) {\n  return p + 1;\n}\n\nfunction crossfilter_reduceDecrement(p) {\n  return p - 1;\n}\n\nfunction crossfilter_reduceAdd(f) {\n  return function(p, v) {\n    return p + +f(v);\n  };\n}\n\nfunction crossfilter_reduceSubtract(f) {\n  return function(p, v) {\n    return p - f(v);\n  };\n}\nexports.crossfilter = crossfilter;\n\nfunction crossfilter() {\n  var crossfilter = {\n    add: add,\n    remove: removeData,\n    dimension: dimension,\n    groupAll: groupAll,\n    size: size\n  };\n\n  var data = [], // the records\n      n = 0, // the number of records; data.length\n      m = 0, // a bit mask representing which dimensions are in use\n      M = 8, // number of dimensions that can fit in `filters`\n      filters = crossfilter_array8(0), // M bits per record; 1 is filtered out\n      filterListeners = [], // when the filters change\n      dataListeners = [], // when data is added\n      removeDataListeners = []; // when data is removed\n\n  // Adds the specified new records to this crossfilter.\n  function add(newData) {\n    var n0 = n,\n        n1 = newData.length;\n\n    // If there's actually new data to add…\n    // Merge the new data into the existing data.\n    // Lengthen the filter bitset to handle the new records.\n    // Notify listeners (dimensions and groups) that new data is available.\n    if (n1) {\n      data = data.concat(newData);\n      filters = crossfilter_arrayLengthen(filters, n += n1);\n      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n    }\n\n    return crossfilter;\n  }\n\n  // Removes all records that match the current filters.\n  function removeData() {\n    var newIndex = crossfilter_index(n, n),\n        removed = [];\n    for (var i = 0, j = 0; i < n; ++i) {\n      if (filters[i]) newIndex[i] = j++;\n      else removed.push(i);\n    }\n\n    // Remove all matching records from groups.\n    filterListeners.forEach(function(l) { l(0, [], removed); });\n\n    // Update indexes.\n    removeDataListeners.forEach(function(l) { l(newIndex); });\n\n    // Remove old filters and data by overwriting.\n    for (var i = 0, j = 0, k; i < n; ++i) {\n      if (k = filters[i]) {\n        if (i !== j) filters[j] = k, data[j] = data[i];\n        ++j;\n      }\n    }\n    data.length = j;\n    while (n > j) filters[--n] = 0;\n  }\n\n  // Adds a new dimension with the specified value accessor function.\n  function dimension(value) {\n    var dimension = {\n      filter: filter,\n      filterExact: filterExact,\n      filterRange: filterRange,\n      filterFunction: filterFunction,\n      filterAll: filterAll,\n      top: top,\n      bottom: bottom,\n      group: group,\n      groupAll: groupAll,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000\n        zero = ~one, // inverted one, e.g., 11110111\n        values, // sorted, cached array\n        index, // value rank ↦ object id\n        newValues, // temporary array storing newly-added values\n        newIndex, // temporary array storing newly-added index\n        sort = quicksort_by(function(i) { return newValues[i]; }),\n        refilter = crossfilter_filterAll, // for recomputing filter\n        refilterFunction, // the custom filter function in use\n        indexListeners = [], // when data is added\n        dimensionGroups = [],\n        lo0 = 0,\n        hi0 = 0;\n\n    // Updating a dimension is a two-stage process. First, we must update the\n    // associated filters for the newly-added records. Once all dimensions have\n    // updated their filters, the groups are notified to update.\n    dataListeners.unshift(preAdd);\n    dataListeners.push(postAdd);\n\n    removeDataListeners.push(removeData);\n\n    // Incorporate any existing data into this dimension, and make sure that the\n    // filter bitset is wide enough to handle the new dimension.\n    m |= one;\n    if (M >= 32 ? !one : m & -(1 << M)) {\n      filters = crossfilter_arrayWiden(filters, M <<= 1);\n    }\n    preAdd(data, 0, n);\n    postAdd(data, 0, n);\n\n    // Incorporates the specified new records into this dimension.\n    // This function is responsible for updating filters, values, and index.\n    function preAdd(newData, n0, n1) {\n\n      // Permute new values into natural order using a sorted index.\n      newValues = newData.map(value);\n      newIndex = sort(crossfilter_range(n1), 0, n1);\n      newValues = permute(newValues, newIndex);\n\n      // Bisect newValues to determine which new records are selected.\n      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;\n      if (refilterFunction) {\n        for (i = 0; i < n1; ++i) {\n          if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;\n        }\n      } else {\n        for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;\n        for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;\n      }\n\n      // If this dimension previously had no data, then we don't need to do the\n      // more expensive merge operation; use the new values and index as-is.\n      if (!n0) {\n        values = newValues;\n        index = newIndex;\n        lo0 = lo1;\n        hi0 = hi1;\n        return;\n      }\n\n      var oldValues = values,\n          oldIndex = index,\n          i0 = 0,\n          i1 = 0;\n\n      // Otherwise, create new arrays into which to merge new and old.\n      values = new Array(n);\n      index = crossfilter_index(n, n);\n\n      // Merge the old and new sorted values, and old and new index.\n      for (i = 0; i0 < n0 && i1 < n1; ++i) {\n        if (oldValues[i0] < newValues[i1]) {\n          values[i] = oldValues[i0];\n          index[i] = oldIndex[i0++];\n        } else {\n          values[i] = newValues[i1];\n          index[i] = newIndex[i1++] + n0;\n        }\n      }\n\n      // Add any remaining old values.\n      for (; i0 < n0; ++i0, ++i) {\n        values[i] = oldValues[i0];\n        index[i] = oldIndex[i0];\n      }\n\n      // Add any remaining new values.\n      for (; i1 < n1; ++i1, ++i) {\n        values[i] = newValues[i1];\n        index[i] = newIndex[i1] + n0;\n      }\n\n      // Bisect again to recompute lo0 and hi0.\n      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // When all filters have updated, notify index listeners of the new values.\n    function postAdd(newData, n0, n1) {\n      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n      newValues = newIndex = null;\n    }\n\n    function removeData(reIndex) {\n      for (var i = 0, j = 0, k; i < n; ++i) {\n        if (filters[k = index[i]]) {\n          if (i !== j) values[j] = values[i];\n          index[j] = reIndex[k];\n          ++j;\n        }\n      }\n      values.length = j;\n      while (j < n) index[j++] = 0;\n\n      // Bisect again to recompute lo0 and hi0.\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // Updates the selected values based on the specified bounds [lo, hi].\n    // This implementation is used by all the public filter methods.\n    function filterIndexBounds(bounds) {\n      var lo1 = bounds[0],\n          hi1 = bounds[1];\n\n      if (refilterFunction) {\n        refilterFunction = null;\n        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });\n        lo0 = lo1;\n        hi0 = hi1;\n        return dimension;\n      }\n\n      var i,\n          j,\n          k,\n          added = [],\n          removed = [];\n\n      // Fast incremental update based on previous lo index.\n      if (lo1 < lo0) {\n        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          added.push(k);\n        }\n      } else if (lo1 > lo0) {\n        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          removed.push(k);\n        }\n      }\n\n      // Fast incremental update based on previous hi index.\n      if (hi1 > hi0) {\n        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          added.push(k);\n        }\n      } else if (hi1 < hi0) {\n        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          removed.push(k);\n        }\n      }\n\n      lo0 = lo1;\n      hi0 = hi1;\n      filterListeners.forEach(function(l) { l(one, added, removed); });\n      return dimension;\n    }\n\n    // Filters this dimension using the specified range, value, or null.\n    // If the range is null, this is equivalent to filterAll.\n    // If the range is an array, this is equivalent to filterRange.\n    // Otherwise, this is equivalent to filterExact.\n    function filter(range) {\n      return range == null\n          ? filterAll() : Array.isArray(range)\n          ? filterRange(range) : typeof range === \"function\"\n          ? filterFunction(range)\n          : filterExact(range);\n    }\n\n    // Filters this dimension to select the exact value.\n    function filterExact(value) {\n      return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));\n    }\n\n    // Filters this dimension to select the specified range [lo, hi].\n    // The lower bound is inclusive, and the upper bound is exclusive.\n    function filterRange(range) {\n      return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));\n    }\n\n    // Clears any filters on this dimension.\n    function filterAll() {\n      return filterIndexBounds((refilter = crossfilter_filterAll)(values));\n    }\n\n    // Filters this dimension using an arbitrary function.\n    function filterFunction(f) {\n      refilter = crossfilter_filterAll;\n\n      filterIndexFunction(refilterFunction = f);\n\n      lo0 = 0;\n      hi0 = n;\n\n      return dimension;\n    }\n\n    function filterIndexFunction(f) {\n      var i,\n          k,\n          x,\n          added = [],\n          removed = [];\n\n      for (i = 0; i < n; ++i) {\n        if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n          if (x) filters[k] &= zero, added.push(k);\n          else filters[k] |= one, removed.push(k);\n        }\n      }\n      filterListeners.forEach(function(l) { l(one, added, removed); });\n    }\n\n    // Returns the top K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function top(k) {\n      var array = [],\n          i = hi0,\n          j;\n\n      while (--i >= lo0 && k > 0) {\n        if (!filters[j = index[i]]) {\n          array.push(data[j]);\n          --k;\n        }\n      }\n\n      return array;\n    }\n\n    // Returns the bottom K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function bottom(k) {\n      var array = [],\n          i = lo0,\n          j;\n\n      while (i < hi0 && k > 0) {\n        if (!filters[j = index[i]]) {\n          array.push(data[j]);\n          --k;\n        }\n        i++;\n      }\n\n      return array;\n    }\n\n    // Adds a new group to this dimension, using the specified key function.\n    function group(key) {\n      var group = {\n        top: top,\n        all: all,\n        reduce: reduce,\n        reduceCount: reduceCount,\n        reduceSum: reduceSum,\n        order: order,\n        orderNatural: orderNatural,\n        size: size,\n        dispose: dispose,\n        remove: dispose // for backwards-compatibility\n      };\n\n      // Ensure that this group will be removed when the dimension is removed.\n      dimensionGroups.push(group);\n\n      var groups, // array of {key, value}\n          groupIndex, // object id ↦ group id\n          groupWidth = 8,\n          groupCapacity = crossfilter_capacity(groupWidth),\n          k = 0, // cardinality\n          select,\n          heap,\n          reduceAdd,\n          reduceRemove,\n          reduceInitial,\n          update = crossfilter_null,\n          reset = crossfilter_null,\n          resetNeeded = true,\n          groupAll = key === crossfilter_null;\n\n      if (arguments.length < 1) key = crossfilter_identity;\n\n      // The group listens to the crossfilter for when any dimension changes, so\n      // that it can update the associated reduce values. It must also listen to\n      // the parent dimension for when data is added, and compute new keys.\n      filterListeners.push(update);\n      indexListeners.push(add);\n      removeDataListeners.push(removeData);\n\n      // Incorporate any existing data into the grouping.\n      add(values, index, 0, n);\n\n      // Incorporates the specified new values into this group.\n      // This function is responsible for updating groups and groupIndex.\n      function add(newValues, newIndex, n0, n1) {\n        var oldGroups = groups,\n            reIndex = crossfilter_index(k, groupCapacity),\n            add = reduceAdd,\n            initial = reduceInitial,\n            k0 = k, // old cardinality\n            i0 = 0, // index of old group\n            i1 = 0, // index of new record\n            j, // object id\n            g0, // old group\n            x0, // old key\n            x1, // new key\n            g, // group to add\n            x; // key of group to add\n\n        // If a reset is needed, we don't need to update the reduce values.\n        if (resetNeeded) add = initial = crossfilter_null;\n\n        // Reset the new groups (k is a lower bound).\n        // Also, make sure that groupIndex exists and is long enough.\n        groups = new Array(k), k = 0;\n        groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n\n        // Get the first old key (x0 of g0), if it exists.\n        if (k0) x0 = (g0 = oldGroups[0]).key;\n\n        // Find the first new key (x1), skipping NaN keys.\n        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\n        // While new keys remain…\n        while (i1 < n1) {\n\n          // Determine the lesser of the two current keys; new and old.\n          // If there are no old keys remaining, then always add the new key.\n          if (g0 && x0 <= x1) {\n            g = g0, x = x0;\n\n            // Record the new index of the old group.\n            reIndex[i0] = k;\n\n            // Retrieve the next old key.\n            if (g0 = oldGroups[++i0]) x0 = g0.key;\n          } else {\n            g = {key: x1, value: initial()}, x = x1;\n          }\n\n          // Add the lesser group.\n          groups[k] = g;\n\n          // Add any selected records belonging to the added group, while\n          // advancing the new key and populating the associated group index.\n          while (!(x1 > x)) {\n            groupIndex[j = newIndex[i1] + n0] = k;\n            if (!(filters[j] & zero)) g.value = add(g.value, data[j]);\n            if (++i1 >= n1) break;\n            x1 = key(newValues[i1]);\n          }\n\n          groupIncrement();\n        }\n\n        // Add any remaining old groups that were greater than all new keys.\n        // No incremental reduce is needed; these groups have no new records.\n        // Also record the new index of the old group.\n        while (i0 < k0) {\n          groups[reIndex[i0] = k] = oldGroups[i0++];\n          groupIncrement();\n        }\n\n        // If we added any new groups before any old groups,\n        // update the group index of all the old records.\n        if (k > i0) for (i0 = 0; i0 < n0; ++i0) {\n          groupIndex[i0] = reIndex[groupIndex[i0]];\n        }\n\n        // Modify the update and reset behavior based on the cardinality.\n        // If the cardinality is less than or equal to one, then the groupIndex\n        // is not needed. If the cardinality is zero, then there are no records\n        // and therefore no groups to update or reset. Note that we also must\n        // change the registered listener to point to the new method.\n        j = filterListeners.indexOf(update);\n        if (k > 1) {\n          update = updateMany;\n          reset = resetMany;\n        } else {\n          if (!k && groupAll) {\n            k = 1;\n            groups = [{key: null, value: initial()}];\n          }\n          if (k === 1) {\n            update = updateOne;\n            reset = resetOne;\n          } else {\n            update = crossfilter_null;\n            reset = crossfilter_null;\n          }\n          groupIndex = null;\n        }\n        filterListeners[j] = update;\n\n        // Count the number of added groups,\n        // and widen the group index as needed.\n        function groupIncrement() {\n          if (++k === groupCapacity) {\n            reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);\n            groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);\n            groupCapacity = crossfilter_capacity(groupWidth);\n          }\n        }\n      }\n\n      function removeData() {\n        if (k > 1) {\n          var oldK = k,\n              oldGroups = groups,\n              seenGroups = crossfilter_index(oldK, oldK);\n\n          // Filter out non-matches by copying matching group index entries to\n          // the beginning of the array.\n          for (var i = 0, j = 0; i < n; ++i) {\n            if (filters[i]) {\n              seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n              ++j;\n            }\n          }\n\n          // Reassemble groups including only those groups that were referred\n          // to by matching group index entries.  Note the new group index in\n          // seenGroups.\n          groups = [], k = 0;\n          for (i = 0; i < oldK; ++i) {\n            if (seenGroups[i]) {\n              seenGroups[i] = k++;\n              groups.push(oldGroups[i]);\n            }\n          }\n\n          if (k > 1) {\n            // Reindex the group index using seenGroups to find the new index.\n            for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n          } else {\n            groupIndex = null;\n          }\n          filterListeners[filterListeners.indexOf(update)] = k > 1\n              ? (reset = resetMany, update = updateMany)\n              : k === 1 ? (reset = resetOne, update = updateOne)\n              : reset = update = crossfilter_null;\n        } else if (k === 1) {\n          if (groupAll) return;\n          for (var i = 0; i < n; ++i) if (filters[i]) return;\n          groups = [], k = 0;\n          filterListeners[filterListeners.indexOf(update)] =\n          update = reset = crossfilter_null;\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is greater than 1.\n      function updateMany(filterOne, added, removed) {\n        if (filterOne === one || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g;\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (!(filters[k = added[i]] & zero)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceAdd(g.value, data[k]);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if ((filters[k = removed[i]] & zero) === filterOne) {\n            g = groups[groupIndex[k]];\n            g.value = reduceRemove(g.value, data[k]);\n          }\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is 1.\n      function updateOne(filterOne, added, removed) {\n        if (filterOne === one || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g = groups[0];\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (!(filters[k = added[i]] & zero)) {\n            g.value = reduceAdd(g.value, data[k]);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if ((filters[k = removed[i]] & zero) === filterOne) {\n            g.value = reduceRemove(g.value, data[k]);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is greater than 1.\n      function resetMany() {\n        var i,\n            g;\n\n        // Reset all group values.\n        for (i = 0; i < k; ++i) {\n          groups[i].value = reduceInitial();\n        }\n\n        // Add any selected records.\n        for (i = 0; i < n; ++i) {\n          if (!(filters[i] & zero)) {\n            g = groups[groupIndex[i]];\n            g.value = reduceAdd(g.value, data[i]);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is 1.\n      function resetOne() {\n        var i,\n            g = groups[0];\n\n        // Reset the singleton group values.\n        g.value = reduceInitial();\n\n        // Add any selected records.\n        for (i = 0; i < n; ++i) {\n          if (!(filters[i] & zero)) {\n            g.value = reduceAdd(g.value, data[i]);\n          }\n        }\n      }\n\n      // Returns the array of group values, in the dimension's natural order.\n      function all() {\n        if (resetNeeded) reset(), resetNeeded = false;\n        return groups;\n      }\n\n      // Returns a new array containing the top K group values, in reduce order.\n      function top(k) {\n        var top = select(all(), 0, groups.length, k);\n        return heap.sort(top, 0, top.length);\n      }\n\n      // Sets the reduce behavior for this group to use the specified functions.\n      // This method lazily recomputes the reduce values, waiting until needed.\n      function reduce(add, remove, initial) {\n        reduceAdd = add;\n        reduceRemove = remove;\n        reduceInitial = initial;\n        resetNeeded = true;\n        return group;\n      }\n\n      // A convenience method for reducing by count.\n      function reduceCount() {\n        return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n      }\n\n      // A convenience method for reducing by sum(value).\n      function reduceSum(value) {\n        return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n      }\n\n      // Sets the reduce order, using the specified accessor.\n      function order(value) {\n        select = heapselect_by(valueOf);\n        heap = heap_by(valueOf);\n        function valueOf(d) { return value(d.value); }\n        return group;\n      }\n\n      // A convenience method for natural ordering by reduce value.\n      function orderNatural() {\n        return order(crossfilter_identity);\n      }\n\n      // Returns the cardinality of this group, irrespective of any filters.\n      function size() {\n        return k;\n      }\n\n      // Removes this group and associated event listeners.\n      function dispose() {\n        var i = filterListeners.indexOf(update);\n        if (i >= 0) filterListeners.splice(i, 1);\n        i = indexListeners.indexOf(add);\n        if (i >= 0) indexListeners.splice(i, 1);\n        i = removeDataListeners.indexOf(removeData);\n        if (i >= 0) removeDataListeners.splice(i, 1);\n        return group;\n      }\n\n      return reduceCount().orderNatural();\n    }\n\n    // A convenience function for generating a singleton group.\n    function groupAll() {\n      var g = group(crossfilter_null), all = g.all;\n      delete g.all;\n      delete g.top;\n      delete g.order;\n      delete g.orderNatural;\n      delete g.size;\n      g.value = function() { return all()[0].value; };\n      return g;\n    }\n\n    // Removes this dimension and associated groups and event listeners.\n    function dispose() {\n      dimensionGroups.forEach(function(group) { group.dispose(); });\n      var i = dataListeners.indexOf(preAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = dataListeners.indexOf(postAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = removeDataListeners.indexOf(removeData);\n      if (i >= 0) removeDataListeners.splice(i, 1);\n      m &= zero;\n      return filterAll();\n    }\n\n    return dimension;\n  }\n\n  // A convenience method for groupAll on a dummy dimension.\n  // This implementation can be optimized since it always has cardinality 1.\n  function groupAll() {\n    var group = {\n      reduce: reduce,\n      reduceCount: reduceCount,\n      reduceSum: reduceSum,\n      value: value,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var reduceValue,\n        reduceAdd,\n        reduceRemove,\n        reduceInitial,\n        resetNeeded = true;\n\n    // The group listens to the crossfilter for when any dimension changes, so\n    // that it can update the reduce value. It must also listen to the parent\n    // dimension for when data is added.\n    filterListeners.push(update);\n    dataListeners.push(add);\n\n    // For consistency; actually a no-op since resetNeeded is true.\n    add(data, 0, n);\n\n    // Incorporates the specified new values into this group.\n    function add(newData, n0) {\n      var i;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = n0; i < n; ++i) {\n        if (!filters[i]) {\n          reduceValue = reduceAdd(reduceValue, data[i]);\n        }\n      }\n    }\n\n    // Reduces the specified selected or deselected records.\n    function update(filterOne, added, removed) {\n      var i,\n          k,\n          n;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = 0, n = added.length; i < n; ++i) {\n        if (!filters[k = added[i]]) {\n          reduceValue = reduceAdd(reduceValue, data[k]);\n        }\n      }\n\n      // Remove the removed values.\n      for (i = 0, n = removed.length; i < n; ++i) {\n        if (filters[k = removed[i]] === filterOne) {\n          reduceValue = reduceRemove(reduceValue, data[k]);\n        }\n      }\n    }\n\n    // Recomputes the group reduce value from scratch.\n    function reset() {\n      var i;\n\n      reduceValue = reduceInitial();\n\n      for (i = 0; i < n; ++i) {\n        if (!filters[i]) {\n          reduceValue = reduceAdd(reduceValue, data[i]);\n        }\n      }\n    }\n\n    // Sets the reduce behavior for this group to use the specified functions.\n    // This method lazily recomputes the reduce value, waiting until needed.\n    function reduce(add, remove, initial) {\n      reduceAdd = add;\n      reduceRemove = remove;\n      reduceInitial = initial;\n      resetNeeded = true;\n      return group;\n    }\n\n    // A convenience method for reducing by count.\n    function reduceCount() {\n      return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n    }\n\n    // A convenience method for reducing by sum(value).\n    function reduceSum(value) {\n      return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n    }\n\n    // Returns the computed reduce value.\n    function value() {\n      if (resetNeeded) reset(), resetNeeded = false;\n      return reduceValue;\n    }\n\n    // Removes this group and associated event listeners.\n    function dispose() {\n      var i = filterListeners.indexOf(update);\n      if (i >= 0) filterListeners.splice(i);\n      i = dataListeners.indexOf(add);\n      if (i >= 0) dataListeners.splice(i);\n      return group;\n    }\n\n    return reduceCount();\n  }\n\n  // Returns the number of records in this crossfilter, irrespective of any filters.\n  function size() {\n    return n;\n  }\n\n  return arguments.length\n      ? add(arguments[0])\n      : crossfilter;\n}\n\n// Returns an array of size n, big enough to store ids up to m.\nfunction crossfilter_index(n, m) {\n  return (m < 0x101\n      ? crossfilter_array8 : m < 0x10001\n      ? crossfilter_array16\n      : crossfilter_array32)(n);\n}\n\n// Constructs a new array of size n, with sequential values from 0 to n - 1.\nfunction crossfilter_range(n) {\n  var range = crossfilter_index(n, n);\n  for (var i = -1; ++i < n;) range[i] = i;\n  return range;\n}\n\nfunction crossfilter_capacity(w) {\n  return w === 8\n      ? 0x100 : w === 16\n      ? 0x10000\n      : 0x100000000;\n}\n})(typeof exports !== 'undefined' && exports || this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/crossfilter/crossfilter.js\n ** module id = 2\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.5.16\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/d3/d3.js\n ** module id = 3\n ** module chunks = 0\n **/","/**\n * @license\n * lodash 4.5.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash -d -o ./foo/lodash.js`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.5.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0x/i;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsQuoteRange = '\\\\u2018\\\\u2019\\\\u201c\\\\u201d',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to match non-compound words composed of alphanumeric characters. */\n  var reBasicWord = /[a-zA-Z0-9]+/g;\n\n  /** Used to match complex or compound words. */\n  var reComplexWord = RegExp([\n    rsUpper + '?' + rsLower + '+(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+',\n    rsUpper + '+',\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasComplexWord = /[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_',\n    'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[mapTag] = cloneableTags[numberTag] =\n  cloneableTags[objectTag] = cloneableTags[regexpTag] =\n  cloneableTags[setTag] = cloneableTags[stringTag] =\n  cloneableTags[symbolTag] = cloneableTags[uint8Tag] =\n  cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] =\n  cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `exports`. */\n  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n    ? exports\n    : undefined;\n\n  /** Detect free variable `module`. */\n  var freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n    ? module\n    : undefined;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = (freeModule && freeModule.exports === freeExports)\n    ? freeExports\n    : undefined;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n  /** Detect free variable `self`. */\n  var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n  /** Detect free variable `window`. */\n  var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n  /** Detect `this` as the global object. */\n  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal ||\n    ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\n      freeSelf || thisGlobal || Function('return this')();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    var length = args.length;\n    switch (length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * Creates a new array concatenating `array` with `other`.\n   *\n   * @private\n   * @param {Array} array The first array to concatenate.\n   * @param {Array} other The second array to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   */\n  function arrayConcat(array, other) {\n    var index = -1,\n        length = array.length,\n        othIndex = -1,\n        othLength = other.length,\n        result = Array(length + othLength);\n\n    while (++index < length) {\n      result[index] = array[index];\n    }\n    while (++othIndex < othLength) {\n      result[index++] = other[othIndex];\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    return !!array.length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * A specialized version of `_.includesWith` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? current === current\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.find` and `_.findKey`, without\n   * support for iteratee shorthands, which iterates over `collection` using\n   * `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @param {boolean} [retKey] Specify returning the key of the found element instead of the element itself.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFind(collection, predicate, eachFunc, retKey) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = retKey ? key : value;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define\n   * the sort order of `array` and replaces criteria objects with their\n   * corresponding values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the new array of key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing wrapper metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Checks if `value` is a global object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n   */\n  function checkGlobal(value) {\n    return (value && value.Object === Object) ? value : null;\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Used by `_.orderBy` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n   * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n   * of corresponding values.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]|string[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = compareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * (order == 'desc' ? -1 : 1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        result++;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n    return value > -1 && value % 1 == 0 && value < length;\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to an array.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    if (!(string && reHasComplexSymbol.test(string))) {\n      return string.length;\n    }\n    var result = reComplexSymbol.lastIndex = 0;\n    while (reComplexSymbol.test(string)) {\n      result++;\n    }\n    return result;\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return string.match(reComplexSymbol);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Use `context` to mock `Date#getTime` use in `_.now`.\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Date = context.Date,\n        Error = context.Error,\n        Math = context.Math,\n        RegExp = context.RegExp,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = context.Array.prototype,\n        objectProto = context.Object.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = context.Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Reflect = context.Reflect,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        clearTimeout = context.clearTimeout,\n        enumerate = Reflect ? Reflect.enumerate : undefined,\n        getPrototypeOf = Object.getPrototypeOf,\n        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = Object.keys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var Map = getNative(context, 'Map'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var mapCtorString = Map ? funcToString.call(Map) : '',\n        setCtorString = Set ? funcToString.call(Set) : '',\n        weakMapCtorString = WeakMap ? funcToString.call(WeakMap) : '';\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = Symbol ? symbolProto.valueOf : undefined,\n        symbolToString = Symbol ? symbolProto.toString : undefined;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chaining. Methods that operate on and return arrays, collections, and\n     * functions can be chained together. Methods that retrieve a single value or\n     * may return a primitive value will automatically end the chain sequence and\n     * return the unwrapped value. Otherwise, the value must be unwrapped with\n     * `_#value`.\n     *\n     * Explicit chaining, which must be unwrapped with `_#value` in all cases,\n     * may be enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization to merge iteratee calls; this avoids the creation\n     * of intermediate arrays and can greatly reduce the number of iteratee executions.\n     * Sections of a chain sequence qualify for shortcut fusion if the section is\n     * applied to an array of at least two hundred elements and any iteratees\n     * accept only one argument. The heuristic for whether a section qualifies\n     * for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`, `difference`,\n     * `differenceBy`, `differenceWith`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flattenDepth`,\n     * `flip`, `flow`, `flowRight`, `fromPairs`, `functions`, `functionsIn`,\n     * `groupBy`, `initial`, `intersection`, `intersectionBy`, `intersectionWith`,\n     * `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`, `keys`, `keysIn`,\n     * `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`, `memoize`,\n     * `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`, `nthArg`,\n     * `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`, `overEvery`,\n     * `overSome`, `partial`, `partialRight`, `partition`, `pick`, `pickBy`, `plant`,\n     * `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`, `pullAt`, `push`,\n     * `range`, `rangeRight`, `rearg`, `reject`, `remove`, `rest`, `reverse`,\n     * `sampleSize`, `set`, `setWith`, `shuffle`, `slice`, `sort`, `sortBy`,\n     * `splice`, `spread`, `tail`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `toArray`, `toPairs`, `toPairsIn`,\n     * `toPath`, `toPlainObject`, `transform`, `unary`, `union`, `unionBy`,\n     * `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`, `unshift`, `unzip`,\n     * `unzipWith`, `values`, `valuesIn`, `without`, `wrap`, `xor`, `xorBy`,\n     * `xorWith`, `zip`, `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `endsWith`, `eq`,\n     * `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `floor`, `forEach`, `forEachRight`, `forIn`,\n     * `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`,\n     * `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`,\n     * `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,\n     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,\n     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`,\n     * `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`, `isSafeInteger`,\n     * `isSet`, `isString`, `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`,\n     * `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`,\n     * `lt`, `lte`, `max`, `maxBy`, `mean`, `min`, `minBy`, `noConflict`, `noop`,\n     * `now`, `pad`, `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `sample`,\n     * `shift`, `size`, `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`,\n     * `sortedLastIndex`, `sortedLastIndexBy`, `startCase`, `startsWith`, `subtract`,\n     * `sum`, `sumBy`, `template`, `times`, `toLower`, `toInteger`, `toLength`,\n     * `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`, `trimEnd`,\n     * `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`, `upperFirst`,\n     * `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an hash object.\n     *\n     * @private\n     * @constructor\n     * @returns {Object} Returns the new hash object.\n     */\n    function Hash() {}\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(hash, key) {\n      return hashHas(hash, key) && delete hash[key];\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @param {Object} hash The hash to query.\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(hash, key) {\n      if (nativeCreate) {\n        var result = hash[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @param {Object} hash The hash to query.\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(hash, key) {\n      return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     */\n    function hashSet(hash, key, value) {\n      hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function MapCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = values[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapClear() {\n      this.__data__ = {\n        'hash': new Hash,\n        'map': Map ? new Map : [],\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapDelete(key) {\n      var data = this.__data__;\n      if (isKeyable(key)) {\n        return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n      }\n      return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapGet(key) {\n      var data = this.__data__;\n      if (isKeyable(key)) {\n        return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n      }\n      return Map ? data.map.get(key) : assocGet(data.map, key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      var data = this.__data__;\n      if (isKeyable(key)) {\n        return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n      }\n      return Map ? data.map.has(key) : assocHas(data.map, key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache object.\n     */\n    function mapSet(key, value) {\n      var data = this.__data__;\n      if (isKeyable(key)) {\n        hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n      } else if (Map) {\n        data.map.set(key, value);\n      } else {\n        assocSet(data.map, key, value);\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a set cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.push(values[index]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache`.\n     *\n     * @private\n     * @param {Object} cache The set cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function cacheHas(cache, value) {\n      var map = cache.__data__;\n      if (isKeyable(value)) {\n        var data = map.__data__,\n            hash = typeof value == 'string' ? data.string : data.hash;\n\n        return hash[value] === HASH_UNDEFINED;\n      }\n      return map.has(value);\n    }\n\n    /**\n     * Adds `value` to the set cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var map = this.__data__;\n      if (isKeyable(value)) {\n        var data = map.__data__,\n            hash = typeof value == 'string' ? data.string : data.hash;\n\n        hash[value] = HASH_UNDEFINED;\n      }\n      else {\n        map.set(value, HASH_UNDEFINED);\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function Stack(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = values[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = { 'array': [], 'map': null };\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          array = data.array;\n\n      return array ? assocDelete(array, key) : data.map['delete'](key);\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      var data = this.__data__,\n          array = data.array;\n\n      return array ? assocGet(array, key) : data.map.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      var data = this.__data__,\n          array = data.array;\n\n      return array ? assocHas(array, key) : data.map.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache object.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__,\n          array = data.array;\n\n      if (array) {\n        if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n          assocSet(array, key, value);\n        } else {\n          data.array = null;\n          data.map = new MapCache(array);\n        }\n      }\n      var map = data.map;\n      if (map) {\n        map.set(key, value);\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Removes `key` and its value from the associative array.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function assocDelete(array, key) {\n      var index = assocIndexOf(array, key);\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = array.length - 1;\n      if (index == lastIndex) {\n        array.pop();\n      } else {\n        splice.call(array, index, 1);\n      }\n      return true;\n    }\n\n    /**\n     * Gets the associative array value for `key`.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function assocGet(array, key) {\n      var index = assocIndexOf(array, key);\n      return index < 0 ? undefined : array[index][1];\n    }\n\n    /**\n     * Checks if an associative array value for `key` exists.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function assocHas(array, key) {\n      return assocIndexOf(array, key) > -1;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `key` is found in `array`\n     * of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Sets the associative array `key` to `value`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     */\n    function assocSet(array, key, value) {\n      var index = assocIndexOf(array, key);\n      if (index < 0) {\n        array.push([key, value]);\n      } else {\n        array[index][1] = value;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the array-like object.\n     */\n    function baseCastArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the array-like object.\n     */\n    function baseCastFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function baseCastPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        assignValue(result, key, baseClone(subValue, isDeep, customizer, key, value, stack));\n      });\n      return isArr ? result : copySymbols(value, result);\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new function.\n     */\n    function baseConforms(source) {\n      var props = keys(source),\n          length = props.length;\n\n      return function(object) {\n        if (object == null) {\n          return !length;\n        }\n        var index = length;\n        while (index--) {\n          var key = props[index],\n              predicate = source[key],\n              value = object[key];\n\n          if ((value === undefined && !(key in Object(object))) || !predicate(value)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(proto) {\n      return isObject(proto) ? objectCreate(proto) : {};\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an array\n     * of `func` arguments.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments to provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support for\n     * excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && isArrayLikeObject(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return object == null ? object : baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n      // that are composed entirely of index properties, return `false` for\n      // `hasOwnProperty` checks of them.\n      return hasOwnProperty.call(object, key) ||\n        (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        caches[othIndex] = !comparator && (iteratee || array.length >= 120)\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          length = array.length,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = baseCastPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag, equalFunc, customizer, bitmask);\n      }\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      if (!isPartial) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack,\n              result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      var type = typeof value;\n      if (type == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      return nativeKeys(Object(object));\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      object = object == null ? object : Object(object);\n\n      var result = [];\n      for (var key in object) {\n        result.push(key);\n      }\n      return result;\n    }\n\n    // Fallback for IE < 9 with es6-shim.\n    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n      baseKeysIn = function(object) {\n        return iteratorToArray(enumerate(object));\n      };\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value &&\n            (value !== undefined || (key in Object(object)));\n        };\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      var props = (isArray(source) || isTypedArray(source))\n        ? undefined\n        : keysIn(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      stack.set(srcValue, newValue);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1,\n          toIteratee = getIteratee();\n\n      iteratees = arrayMap(iteratees.length ? iteratees : Array(1), function(iteratee) {\n        return toIteratee(iteratee);\n      });\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property names.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return arrayReduce(props, function(result, key) {\n        if (key in object) {\n          result[key] = object[key];\n        }\n        return result;\n      }, {});\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key) {\n        if (predicate(value, key)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAll`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values) {\n      return basePullAllBy(array, values);\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAllBy(array, values, iteratee) {\n      var index = -1,\n          length = values.length,\n          seen = array;\n\n      if (iteratee) {\n        seen = arrayMap(array, function(value) { return iteratee(value); });\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = baseIndexOf(seen, computed, fromIndex)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (lastIndex == length || index != previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = baseCastPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[last(path)];\n            }\n          }\n          else {\n            delete array[index];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the new array of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          var newValue = value;\n          if (index != lastIndex) {\n            var objValue = nested[key];\n            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n            if (newValue === undefined) {\n              newValue = objValue == null\n                ? (isIndex(path[index + 1]) ? [] : {})\n                : objValue;\n            }\n          }\n          assignValue(nested, key, newValue);\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq`.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array) {\n      return baseSortedUniqBy(array);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniqBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniqBy(array, iteratee) {\n      var index = 0,\n          length = array.length,\n          value = array[0],\n          computed = iteratee ? iteratee(value) : value,\n          seen = computed,\n          resIndex = 0,\n          result = [value];\n\n      while (++index < length) {\n        value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n        if (!eq(computed, seen)) {\n          seen = computed;\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n      object = parent(object, path);\n      var key = last(path);\n      return (object != null && has(object, key)) ? delete object[key] : true;\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property names.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        assignFunc(result, props[index], index < valsLength ? values[index] : undefined);\n      }\n      return result;\n    }\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var Ctor = buffer.constructor,\n          result = new Ctor(buffer.length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var Ctor = arrayBuffer.constructor,\n          result = new Ctor(arrayBuffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map) {\n      var Ctor = map.constructor;\n      return arrayReduce(mapToArray(map), addMapEntry, new Ctor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var Ctor = regexp.constructor,\n          result = new Ctor(regexp.source, reFlags.exec(regexp));\n\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set) {\n      var Ctor = set.constructor;\n      return arrayReduce(setToArray(set), addSetEntry, new Ctor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return Symbol ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var arrayBuffer = typedArray.buffer,\n          buffer = isDeep ? cloneArrayBuffer(arrayBuffer) : arrayBuffer,\n          Ctor = typedArray.constructor;\n\n      return new Ctor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object) {\n      return copyObjectWith(source, props, object);\n    }\n\n    /**\n     * This function is like `copyObject` except that it accepts a function to\n     * customize copied values.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObjectWith(source, props, object, customizer) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : source[key];\n\n        assignValue(object, key, newValue);\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return rest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = typeof customizer == 'function'\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBaseWrapper(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = reHasComplexSymbol.test(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols ? strSymbols[0] : string.charAt(0),\n            trailing = strSymbols ? strSymbols.slice(1).join('') : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string)), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurryWrapper(func, bitmask, arity) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getPlaceholder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return rest(function(funcs) {\n        funcs = baseFlatten(funcs, 1);\n\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getPlaceholder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new invoker function.\n     */\n    function createOver(arrayFunc) {\n      return rest(function(iteratees) {\n        iteratees = arrayMap(baseFlatten(iteratees, 1), getIteratee());\n        return rest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(string, length, chars) {\n      length = toInteger(length);\n\n      var strLength = stringSize(string);\n      if (!length || strLength >= length) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars === undefined ? ' ' : (chars + '');\n\n      var result = repeat(chars, nativeCeil(padLength / stringSize(chars)));\n      return reHasComplexSymbol.test(chars)\n        ? stringToArray(result).slice(0, padLength).join('')\n        : result.slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toNumber(start);\n        start = start === start ? start : 0;\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toNumber(end) || 0;\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newArgPos = argPos ? copyArray(argPos) : undefined,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, newArgPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = toInteger(precision);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBaseWrapper(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurryWrapper(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartialWrapper(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n     * @param {Object} [stack] Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var index = -1,\n          isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(array, other);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isUnordered) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask) {\n      switch (tag) {\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object) ? other != +other : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          // Recursively compare objects (susceptible to call stack limits).\n          return (isPartial || object.size == other.size) &&\n            equalFunc(convert(object), convert(other), customizer, bitmask | UNORDERED_COMPARE_FLAG);\n\n        case symbolTag:\n          return !!Symbol && (symbolValueOf.call(object) == symbolValueOf.call(other));\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : baseHas(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      return result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If the `_.iteratee` method is\n     * customized this function returns the custom method, otherwise it returns\n     * `baseIteratee`. If arguments are provided the chosen function is invoked\n     * with them and its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = toPairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getPlaceholder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Creates an array of the own symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = getOwnPropertySymbols || function() {\n      return [];\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function getTag(value) {\n      return objectToString.call(value);\n    }\n\n    // Fallback for IE 11 providing `toStringTag` values for maps, sets, and weakmaps.\n    if ((Map && getTag(new Map) != mapTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : null,\n            ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case mapCtorString: return mapTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasFunc(object, path);\n      if (!result && !isKey(path)) {\n        path = baseCastPath(path);\n        object = parent(object, path);\n        if (object != null) {\n          path = last(path);\n          result = hasFunc(object, path);\n        }\n      }\n      var length = object ? object.length : undefined;\n      return result || (\n        !!length && isLength(length) && isIndex(path, length) &&\n        (isArray(object) || isString(object) || isArguments(object))\n      );\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (isFunction(object.constructor) && !isPrototype(object))\n        ? baseCreate(getPrototypeOf(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Creates an array of index keys for `object` values of arrays,\n     * `arguments` objects, and strings, otherwise `null` is returned.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array|null} Returns index keys, else `null`.\n     */\n    function indexKeys(object) {\n      var length = object ? object.length : undefined;\n      if (isLength(length) &&\n          (isArray(object) || isString(object) || isArguments(object))) {\n        return baseTimes(length, String);\n      }\n      return null;\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (typeof value == 'number') {\n        return true;\n      }\n      return !isArray(value) &&\n        (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n          (object != null && value in Object(object)));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return type == 'number' || type == 'boolean' ||\n        (type == 'string' && value != '__proto__') || value == null;\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (isFunction(Ctor) && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * modify function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * combined case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : copyArray(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : copyArray(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : copyArray(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : copyArray(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = copyArray(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n      }\n      return objValue;\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    function stringToPath(string) {\n      var result = [];\n      toString(string).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=0] The length of each chunk.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size) {\n      size = nativeMax(toInteger(size), 0);\n\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var concat = rest(function(array, values) {\n      if (!isArray(array)) {\n        array = array == null ? [] : [Object(array)];\n      }\n      values = baseFlatten(values, 1);\n      return arrayConcat(array, values);\n    });\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * given arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([3, 2, 1], [4, 2]);\n     * // => [3, 1]\n     */\n    var difference = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);\n     * // => [3.1, 1.3]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = rest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, true), getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = rest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate) {\n      return (array && array.length)\n        ? baseFindIndex(array, getIteratee(predicate, 3))\n        : -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate) {\n      return (array && array.length)\n        ? baseFindIndex(array, getIteratee(predicate, 3), true)\n        : -1;\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the offset\n     * from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      fromIndex = toInteger(fromIndex);\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     *\n     * _.intersection([2, 1], [4, 2], [1, 2]);\n     * // => [2]\n     */\n    var intersection = rest(function(arrays) {\n      var mapped = arrayMap(arrays, baseCastArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = rest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, baseCastArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = rest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, baseCastArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = (index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)) + 1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    var pull = rest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pullAll(array, [2, 3]);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAllBy(array, values, getIteratee(iteratee))\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified individually or in arrays.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = rest(function(array, indexes) {\n      indexes = arrayMap(baseFlatten(indexes, 1), String);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(compareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of [`Array#slice`](https://mdn.io/Array/slice)\n     * to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 5], 4);\n     * // => 0\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     * @example\n     *\n     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };\n     *\n     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([1, 1, 2, 2], 2);\n     * // => 2\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5], 4);\n     * // => 1\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     * @example\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([1, 1, 2, 2], 2);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniqBy(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with three\n     * arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2, 1], [4, 2], [1, 2]);\n     * // => [2, 1, 4]\n     */\n    var union = rest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n     * // => [2.1, 1.2, 4.3]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, true), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([2, 1], [4, 2]);\n     * // => [1, 4]\n     */\n    var xor = rest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n     * // => [1.2, 4.3]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = rest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property names and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} [props=[]] The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} [props=[]] The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = rest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method chaining enabled.\n     * The result of such method chaining must be unwrapped with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n     *  specified individually or in arrays.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     *\n     * _(['a', 'b', 'c']).at(0, 2).value();\n     * // => ['a', 'c']\n     */\n    var wrapperAt = rest(function(paths) {\n      paths = baseFlatten(paths, 1);\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * This method is the wrapper version of `_.flatMap`.\n     *\n     * @name flatMap\n     * @memberOf _\n     * @category Seq\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _([1, 2]).flatMap(duplicate).value();\n     * // => [1, 1, 2, 2]\n     */\n    function wrapperFlatMap(iteratee) {\n      return this.map(iteratee).flatten();\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    function find(collection, predicate) {\n      predicate = getIteratee(predicate, 3);\n      if (isArray(collection)) {\n        var index = baseFindIndex(collection, predicate);\n        return index > -1 ? collection[index] : undefined;\n      }\n      return baseFind(collection, predicate, baseEach);\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, predicate) {\n      predicate = getIteratee(predicate, 3);\n      if (isArray(collection)) {\n        var index = baseFindIndex(collection, predicate, true);\n        return index > -1 ? collection[index] : undefined;\n      }\n      return baseFind(collection, predicate, baseEachRight);\n    }\n\n    /**\n     * Creates an array of flattened values by running each element in `collection`\n     * through `iteratee` and concating its result to the other mapped values.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior use `_.forIn` or `_.forOwn`\n     * for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(value) {\n     *   console.log(value);\n     * });\n     * // => logs `1` then `2`\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n     */\n    function forEach(collection, iteratee) {\n      return (typeof iteratee == 'function' && isArray(collection))\n        ? arrayEach(collection, iteratee)\n        : baseEach(collection, baseCastFunction(iteratee));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => logs `2` then `1`\n     */\n    function forEachRight(collection, iteratee) {\n      return (typeof iteratee == 'function' && isArray(collection))\n        ? arrayEachRight(collection, iteratee)\n        : baseEachRight(collection, baseCastFunction(iteratee));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of elements responsible for generating the key.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string it's checked\n     * for a substring of `value`, otherwise [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it's\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = rest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `curry`, `curryRight`, `drop`, `dropRight`, `every`, `fill`,\n     * `invert`, `parseInt`, `random`, `range`, `rangeRight`, `slice`, `some`,\n     * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimEnd`, `trimStart`,\n     * and `words`\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} [iteratees=[_.identity]] The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getIteratee(predicate, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var array = isArrayLike(collection) ? collection : values(collection),\n          length = array.length;\n\n      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=0] The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n) {\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = baseClamp(toInteger(n), 0, length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sampleSize(collection, MAX_ARRAY_LENGTH);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        var result = collection.length;\n        return (result && isString(collection)) ? stringSize(collection) : result;\n      }\n      return keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by, specified individually or in arrays.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, function(o) { return o.user; });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.sortBy(users, 'user', function(o) {\n     *   return Math.floor(o.age / 10);\n     * });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortBy = rest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees.length = 1;\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @type {Function}\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = Date.now;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = rest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getPlaceholder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = rest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getPlaceholder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide an options object to indicate whether `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent calls\n     * to the debounced function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it's invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          leading = false,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(toNumber(options.maxWait) || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        args = maxTimeoutId = thisArg = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function flush() {\n        if ((timeoutId && trailingCall) || (maxTimeoutId && trailing)) {\n          result = func.apply(thisArg, args);\n        }\n        cancel();\n        return result;\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!lastCalled && !maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled);\n\n          var isCalled = (remaining <= 0 || remaining > maxWait) &&\n            (leading || maxTimeoutId);\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => logs 'deferred' after one or more milliseconds\n     */\n    var defer = rest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = rest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrapper(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with arguments transformed by\n     * corresponding `transforms`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified individually or in arrays.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = rest(function(func, transforms) {\n      transforms = arrayMap(baseFlatten(transforms, 1), getIteratee());\n\n      var funcsLength = transforms.length;\n      return rest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getPlaceholder(partial));\n      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getPlaceholder(partialRight));\n      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified individually or in arrays.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = rest(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, array);\n          case 1: return func.call(this, args[0], array);\n          case 2: return func.call(this, args[0], args[1], array);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = array;\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return rest(function(args) {\n        var array = args[start],\n            otherArgs = args.slice(0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide an options object to indicate whether\n     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, customizer);\n    }\n\n    /**\n     * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @type {Function}\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    function isArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null &&\n        !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = !Buffer ? constant(false) : function(value) {\n      return value instanceof Buffer;\n    };\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it's an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || isString(value) ||\n            isFunction(value.splice) || isArguments(value))) {\n        return !value.length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined` comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MAX_VALUE);\n     * // => true\n     *\n     * _.isFinite(3.14);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8 which returns 'object' for typed array constructors, and\n      // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    function isMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values. This method is\n     * equivalent to a `_.matches` function when `source` is partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined` comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(funcToString.call(value));\n      }\n      return isObjectLike(value) &&\n        (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) ||\n          objectToString.call(value) != objectTag || isHostObject(value)) {\n        return false;\n      }\n      var proto = getPrototypeOf(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    function isSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3');\n     * // => 3\n     */\n    function toInteger(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      var remainder = value % 1;\n      return value === value ? (remainder ? value - remainder : value) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3);\n     * // => 3\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3');\n     * // => 3\n     */\n    function toNumber(value) {\n      if (isObject(value)) {\n        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string if it's not one. An empty string is returned\n     * for `null` and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (value == null) {\n        return '';\n      }\n      if (isSymbol(value)) {\n        return Symbol ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source objects to the destination\n     * object. Source objects are applied from left to right. Subsequent sources\n     * overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.c = 3;\n     * }\n     *\n     * function Bar() {\n     *   this.e = 5;\n     * }\n     *\n     * Foo.prototype.d = 4;\n     * Bar.prototype.f = 6;\n     *\n     * _.assign({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3, 'e': 5 }\n     */\n    var assign = createAssigner(function(object, source) {\n      copyObject(source, keys(source), object);\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * function Bar() {\n     *   this.d = 4;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     * Bar.prototype.e = 5;\n     *\n     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer` which\n     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n     * assignment is handled by the method instead. The `customizer` is invoked\n     * with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObjectWith(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer` which\n     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n     * assignment is handled by the method instead. The `customizer` is invoked\n     * with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObjectWith(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n     *  specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     *\n     * _.at(['a', 'b', 'c'], 0, 2);\n     * // => ['a', 'c']\n     */\n    var at = rest(function(object, paths) {\n      return baseAt(object, baseFlatten(paths, 1));\n    });\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a `properties`\n     * object is given its own enumerable properties are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable properties of source objects to the\n     * destination object for all destination properties that resolve to `undefined`.\n     * Source objects are applied from left to right. Once a property is set,\n     * additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = rest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = rest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The iteratee is invoked with three arguments:\n     * (value, key, object). Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', then 'c' (iteration order is not guaranteed)\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, baseCastFunction(iteratee), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, baseCastFunction(iteratee), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The iteratee is invoked with three arguments:\n     * (value, key, object). Iteratee functions may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, baseCastFunction(iteratee));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, baseCastFunction(iteratee));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     * var other = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b.c');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b', 'c']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` through `iteratee`.\n     * The corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = rest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      var isProto = isPrototype(object);\n      if (!(isProto || isArrayLike(object))) {\n        return baseKeys(object);\n      }\n      var indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      for (var key in object) {\n        if (baseHas(object, key) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(isProto && key == 'constructor')) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      var index = -1,\n          isProto = isPrototype(object),\n          props = baseKeysIn(object),\n          propsLength = props.length,\n          indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`. The iteratee is invoked with\n     * three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[iteratee(value, key, object)] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee is invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own and inherited enumerable properties of source objects\n     * into the destination object. Source properties that resolve to `undefined`\n     * are skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined` merging is handled by the\n     * method instead. The `customizer` is invoked with seven arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property names to omit, specified\n     *  individually or in arrays.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = rest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(baseFlatten(props, 1), String);\n      return basePick(object, baseDifference(keysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable properties of `object` that `predicate`\n     * doesn't return truthy for. The predicate is invoked with two arguments:\n     * (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      predicate = getIteratee(predicate);\n      return basePickBy(object, function(value, key) {\n        return !predicate(value, key);\n      });\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property names to pick, specified\n     *  individually or in arrays.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = rest(function(object, props) {\n      return object == null ? {} : basePick(object, baseFlatten(props, 1));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it's invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      if (!isKey(path, object)) {\n        path = baseCastPath(path);\n        var result = get(object, path);\n        object = parent(object, path);\n      } else {\n        result = object == null ? undefined : object[path];\n      }\n      if (result === undefined) {\n        result = defaultValue;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.setWith({ '0': { 'length': 2 } }, '[0][1][2]', 3, Object);\n     * // => { '0': { '1': { '2': 3 }, 'length': 2 } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable key-value pairs for `object` which\n     * can be consumed by `_.fromPairs`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    function toPairs(object) {\n      return baseToPairs(object, keys(object));\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable key-value pairs for\n     * `object` which can be consumed by `_.fromPairs`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 1]] (iteration order is not guaranteed)\n     */\n    function toPairsIn(object) {\n      return baseToPairs(object, keysIn(object));\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The iteratee is invoked with four arguments:\n     * (accumulator, value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototypeOf(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toNumber(start) || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toNumber(end) || 0;\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are floats,\n     * a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toNumber(lower) || 0;\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toNumber(upper) || 0;\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = typeof target == 'string' ? target : (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in IE < 9, they can break out of\n     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = stringSize(string);\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      return createPadding('', leftLength, chars) + string + createPadding('', rightLength, chars);\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      return string + createPadding(string, length, chars);\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      return createPadding(string, length, chars) + string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#x15.1.2.2)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = toString(string).replace(reTrim, '');\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      string = toString(string);\n      n = toInteger(n);\n\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the new array of string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      return toString(string).split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + capitalize(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar');\n     * // => '--foo-bar'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar');\n     * // => '--FOO-BAR'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard || chars === undefined) {\n        return string.replace(reTrim, '');\n      }\n      chars = (chars + '');\n      if (!chars) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars);\n\n      return strSymbols\n        .slice(charsStartIndex(strSymbols, chrSymbols), charsEndIndex(strSymbols, chrSymbols) + 1)\n        .join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard || chars === undefined) {\n        return string.replace(reTrimEnd, '');\n      }\n      chars = (chars + '');\n      if (!chars) {\n        return string;\n      }\n      var strSymbols = stringToArray(string);\n      return strSymbols\n        .slice(0, charsEndIndex(strSymbols, stringToArray(chars)) + 1)\n        .join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard || chars === undefined) {\n        return string.replace(reTrimStart, '');\n      }\n      chars = (chars + '');\n      if (!chars) {\n        return string;\n      }\n      var strSymbols = stringToArray(string);\n      return strSymbols\n        .slice(charsStartIndex(strSymbols, stringToArray(chars)))\n        .join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options=({})] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? toString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (reHasComplexSymbol.test(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? strSymbols.slice(0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = rest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind,\n     *  specified individually or in arrays.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, 'onClick');\n     * jQuery(element).on('click', view.onClick);\n     * // => logs 'clicked docs' when clicked\n     */\n    var bindAll = rest(function(object, methodNames) {\n      arrayEach(baseFlatten(methodNames, 1), function(key) {\n        object[key] = bind(object[key], object);\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` invoking the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.constant(true),                _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return rest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument given to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name the created callback returns the\n     * property value for a given element. If `func` is an object the created\n     * callback returns `true` for elements that contain the equivalent object\n     * properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(callback, func) {\n     *   var p = /^(\\S+)\\s*([<>])\\s*(\\S+)$/.exec(func);\n     *   return !p ? callback(func) : function(object) {\n     *     return (p[2] == '>' ? object[p[1]] > p[3] : object[p[1]] < p[3]);\n     *   };\n     * });\n     *\n     * _.filter(users, 'age > 36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`. The created function is equivalent to\n     * `_.isMatch` with a `source` partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invokeMap(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = rest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = rest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = (isObject(options) && 'chain' in options) ? options.chain : true,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns its nth argument.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     *\n     * func('a', 'b', 'c');\n     * // => 'b'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return function() {\n        return arguments[n];\n      };\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments provided\n     * to the created function and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} iteratees The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over(Math.max, Math.min);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments provided to the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} predicates The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery(Boolean, isFinite);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments provided to the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} predicates The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome(Boolean, isFinite);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(true));\n     * // => [true, true, true, true]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = baseCastFunction(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     *\n     * var path = ['a', 'b', 'c'],\n     *     newPath = _.toPath(path);\n     *\n     * console.log(newPath);\n     * // => ['a', 'b', 'c']\n     *\n     * console.log(path === newPath);\n     * // => false\n     */\n    function toPath(value) {\n      return isArray(value) ? arrayMap(value, String) : stringToPath(value);\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      var result;\n      if (augend === undefined && addend === undefined) {\n        return 0;\n      }\n      if (augend !== undefined) {\n        result = augend;\n      }\n      if (addend !== undefined) {\n        result = result === undefined ? addend : (result + addend);\n      }\n      return result;\n    }\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey\n     * `undefined` is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, gt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), gt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return sum(array) / (array ? array.length : 0);\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey\n     * `undefined` is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, lt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), lt)\n        : undefined;\n    }\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    function subtract(minuend, subtrahend) {\n      var result;\n      if (minuend === undefined && subtrahend === undefined) {\n        return 0;\n      }\n      if (minuend !== undefined) {\n        result = minuend;\n      }\n      if (subtrahend !== undefined) {\n        result = result === undefined ? subtrahend : (result - subtrahend);\n      }\n      return result;\n    }\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Avoid inheriting from `Object.prototype` when possible.\n    Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\n    // Add functions to the `MapCache`.\n    MapCache.prototype.clear = mapClear;\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `SetCache`.\n    SetCache.prototype.push = cachePush;\n\n    // Add functions to the `Stack` cache.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      predicate = getIteratee(predicate, 3);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.flatMap = wrapperFlatMap;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Expose lodash on the free variable `window` or `self` when available. This\n  // prevents errors in cases where lodash is loaded by a script tag in the presence\n  // of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch for more details.\n  (freeWindow || freeSelf || {})._ = _;\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/lodash.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/buildin/module.js\n ** module id = 5\n ** module chunks = 0\n **/","\"use strict\";\n\nimport crossfilter from \"crossfilter\";\nimport d3 from \"d3\";\nimport _ from \"lodash\";\n\nlet keys = [];\n\nexport function testdrive() {\n    console.log(\"Hello there!\");\n}\n\nexport const dataUrl = \"./data/11.json\";\n//export const dataUrl = \"https://raw.githubusercontent.com/dbautistav/datahub/gh-pages/ecobici/2015/11.json\";\n\nexport function activate() {\n    // TODO: get & use catalog.\n    //  https://raw.githubusercontent.com/dbautistav/datahub/gh-pages/catalog.json\n    d3.csv(dataUrl, responseHandler);\n\n}\n\n/**\n * Toolkit: dimensions, group, filters\n * ===================================\n *\n * Example output:\n *\n *   keys 9 [\"Bici\", \"Ciclo_Estacion_Arribo\", \"Ciclo_Estacion_Retiro\",\n *              \"Edad_Usuario\", \"Fecha_Arribo\", \"Fecha_Retiro\", \"Genero_Usuario\",\n *              \"Hora_Arribo\", \"Hora_Retiro\"]\n *\n *   filterExact(\"0331\")\n *   43. F\n *   32. M\n *   18. M\n *   72. M\n *   43. F\n *   34. M\n *   32. M\n *   21. M\n *   30. F\n *   25. M\n *   36. M\n *   30. M\n *   23. M\n *   42. M\n *   29. M\n *   47. M\n *   55. M\n *   33. F\n *\n *   byGenderGroup\n *   M: 14\n *   F: 4\n *\n *   Total # of users: 795614\n *   # of users between 23 yo and 25 yo (both included): 53268\n *\n */\nexport function doCrossfilter(dataset) {\n    //// [795614]:\n    ////  {\n    ////    Bici: \"3415\",\n    ////    Ciclo_Estacion_Arribo: \"132\",\n    ////    Ciclo_Estacion_Retiro: \"129\",\n    ////    Edad_Usuario: \"29\",\n    ////    Fecha_Arribo: \"2015-11-01\",\n    ////    Fecha_Retiro: \"2015-11-01\",\n    ////    Genero_Usuario: \"M\",\n    ////    Hora_Arribo: \"00:04:24\",\n    ////    Hora_Retiro: \"00:00:01.623000\"\n    ////  }\n\n    let observations = crossfilter(dataset);\n    //console.log(\"observations\", observations);\n\n    // ~~~~\n    //$(\"#container\")\n    //    .html(\n    //        \"<h2>Items loaded: \" + observations.size() + \"</h2>\" +\n    //        \"<p>Check the dev-tools console.</p>\"\n    //    );\n\n    let byBike = observations.dimension(function (o) {\n        return o.Bici;\n    });\n\n\n    let byBikeGroup = byBike.group();\n    console.log(\"byBikeGroup\", byBikeGroup.size());\n\n    //// Prints every 'Bici' id and number of occurrences:\n    //byBikeGroup.top(Infinity).forEach(function (o, i) {\n    ////    key: set by dimension definition (observation attribute); value: count of 'key' occurrences\n    //    console.log(o.key + \": \" + o.value);\n    //});\n\n    byBike.filter(\"0331\");      // also: byBike.filterExact(\"0331\");\n    console.log('filterExact(\"0331\")    |    (Edad. Genero)');\n    byBike.top(Infinity).forEach(function (o, i) {\n        console.log(o.Edad_Usuario + \". \" + o.Genero_Usuario);\n    });\n\n    // ~~~~\n    let byGender = observations.dimension(function (o) {\n        return o.Genero_Usuario;\n    });\n\n    let byGenderGroup = byGender.group();\n    console.log(\"byGenderGroup\", byGenderGroup.size());\n    byGenderGroup.top(Infinity).forEach(function (o, i) {\n        ////    key: set by dimension definition (observation attribute); value: count of 'key' occurrences\n        console.log(o.key + \": \" + o.value);\n    });\n    //// console.log(\"observations.groupAll().reduceCount().value()\", observations.groupAll().reduceCount().value());\n    let filtered = byGender.top(Infinity).map(function (o, i) {\n        return o;\n    });\n    console.log(filtered);\n\n\n    // Resets previous filters:\n    byBike.filter(null);     // also: byBike.filterAll();\n\n\n    let byAge = observations.dimension(function (o) {\n        return parseInt(o.Edad_Usuario);\n    });\n    console.log(\"Total # of users (dimension-top): \" + byAge.top(Infinity).length);\n    console.log(\"Total # of users (crossfilter-size): \" + observations.size());\n\n    let t0 = 23, tf = 25;\n    byAge.filter([t0, tf]);\n    console.log(\"# of users between \" + t0 + \" yo and \" + tf + \" yo (both included): \" + byAge.top(Infinity).length);\n\n\n    //// Prints every 'Bici' id and number of occurrences (affected by previous 'byAge.filter'):\n    //byBikeGroup.top(Infinity).forEach(function (o, i) {\n    ////    key: set by dimension definition (observation attribute); value: count of 'key' occurrences\n    //    console.log(o.key + \": \" + o.value);\n    //});\n\n\n    // ~~~~\n    t0 = 20;\n    tf = 21;\n    byAge.filter([t0, tf]);\n\n    console.log(\"# of users between \" + t0 + \" yo and \" + tf + \" yo (both included): \" + byAge.top(Infinity).length);\n\n    // By default, the group's reduce function will count the number of records per group.\n    // In addition, the groups will be ordered by count.\n    // [...] a grouping intersects the crossfilter's current filters,\n    //  except for the associated dimension's filter.\n    //  Thus, group methods consider only records that satisfy every filter except this dimension's filter.\n    byGenderGroup.top(Infinity).forEach(function (o, i) {\n        ////    key: set by dimension definition (observation attribute); value: count of 'key' occurrences\n        console.log(o.key + \": \" + o.value);\n    });\n\n\n    byAge.filter(null);\n    let byAgeGroup = byAge.group();\n    console.log(\"byAgeGroup\", byAgeGroup.size(), byAge.bottom(1)[0].Edad_Usuario, byAge.top(1)[0].Edad_Usuario);\n\n    //byBikeGroup.top(Infinity).forEach(function (o, i) {\n    ////    key: set by dimension definition (observation attribute); value: count of 'key' occurrences\n    //    console.log(o.key + \": \" + o.value);\n    //});\n    //byAge.top(Infinity).forEach(function (o, i) {\n    ////    key: set by dimension definition (observation attribute); value: count of 'key' occurrences\n    //    console.log(o.key + \": \" + o.value);\n    //});\n\n\n    // This frees up space.\n    //  (groups and dimensions)\n    byGenderGroup.dispose();\n    byGender.dispose();\n    byBikeGroup.dispose();\n    byBike.dispose();\n    byAgeGroup.dispose();\n    byAge.dispose();\n\n}\n\nexport function responseHandler(response) {\n    setupUI(response, doCrossfilter);\n\n}\n\nexport function setupUI(dataset, cb) {\n    ////  {\n    ////    Bici: \"3415\",\n    ////    Ciclo_Estacion_Arribo: \"132\",\n    ////    Ciclo_Estacion_Retiro: \"129\",\n    ////    Edad_Usuario: \"29\",\n    ////    Fecha_Arribo: \"2015-11-01\",\n    ////    Fecha_Retiro: \"2015-11-01\",\n    ////    Genero_Usuario: \"M\",\n    ////    Hora_Arribo: \"00:04:24\",\n    ////    Hora_Retiro: \"00:00:01.623000\"\n    ////  }\n\n    if (dataset.length > 0) {\n        keys = _.orderBy(_.keysIn(dataset[0]), _.identity, [\"asc\"]);\n        console.log(\"keys\", keys.length, keys);\n\n        // TODO: finish this!\n        // TODO: finish this!\n        //$(\"#container\")\n        // .html(\"<h2>Items loaded: \" + observations.size() + \"</h2><p>Check the dev-tools console.</p>\");\n\n        // Execute callback after setting up UI elements\n        cb(dataset);\n\n    } else {\n        //$(\"#container\")\n        //    .html(\"<h3>Error!  D:</h3><p>Check the dev-tools console.</p>\");\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./script.js\n **/"],"sourceRoot":""}